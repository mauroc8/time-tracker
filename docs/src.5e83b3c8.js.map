{"version":3,"sources":["utils/Maybe.ts","utils/Task.ts","Update.ts","utils/Utils.ts","utils/Levenshtein.ts","vdom/Html.ts","style/Color.ts","layout/Layout.ts","layout/Input.ts","style/Icon.ts","utils/Result.ts","utils/Pair.ts","utils/Decoder.ts","utils/Time.ts","utils/Date.ts","Record.ts","utils/Array.ts","utils/NonemptyArray.ts","TimeGroup.ts","DateGroup.ts","Records.ts","Event.ts","Main.ts","vdom/VirtualDom.ts","runtime.ts","index.ts"],"names":[],"mappings":"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","file":"src.5e83b3c8.js","sourceRoot":"../src","sourcesContent":["export interface Maybe<A> {\n    tag: \"just\" | \"nothing\"\n    withDefault: (value: A) => A\n    map: <B>(func: (a: A) => B) => Maybe<B>\n    andThen: <B>(func: (a: A) => Maybe<B>) => Maybe<B>\n    orElse: (_: () => Maybe<A>) => Maybe<A>\n}\n\nexport function just<A>(value: A): Maybe<A> {\n    return new Just<A>(value)\n}\n\nexport function nothing<A>(): Maybe<A> {\n    return new Nothing<A>()\n}\n\nexport function map2<A, B, C>(fn: (a: A, b: B) => C, a: Maybe<A>, b: Maybe<B>): Maybe<C> {\n    return a.andThen(a_ => b.map(b_ => fn(a_, b_)))\n}\n\nexport function map3<A, B, C, D>(\n    fn: (a: A, b: B, c: C) => D,\n    maybeA: Maybe<A>,\n    maybeB: Maybe<B>,\n    maybeC: Maybe<C>,\n): Maybe<D> {\n    return maybeA.andThen(a =>\n        maybeB.andThen(b =>\n            maybeC.map(c => fn(a, b, c))))\n}\n\nexport function fromUndefined<A>(a: A | undefined): Maybe<A> {\n    if (a === undefined)\n        return nothing()\n    else\n        return just(a)\n}\n\nexport function filter<A>(maybe: Maybe<A>, f: (a: A) => boolean): Maybe<A> {\n    return maybe.andThen(a => f(a) ? just(a) : nothing())\n}\n\nexport function caseOf<A, B>(maybe: Maybe<A>, ifJust: (a: A) => B, ifNothing: () => B): B {\n    return maybe\n        .map(a => () => ifJust(a))\n        .withDefault(ifNothing)\n        ()\n}\n\nclass Just<A> implements Maybe<A> {\n    public tag: \"just\" = \"just\"\n    value: A\n\n    constructor(value: A) {\n        this.value = value\n    }\n\n    withDefault(_: A): A {\n        return this.value\n    }\n\n    map<B>(func: (a: A) => B): Maybe<B> {\n        return new Just(func(this.value))\n    }\n\n    andThen<B>(func: (a: A) => Maybe<B>): Maybe<B> {\n        return func(this.value)\n    }\n\n    orElse(_: () => Maybe<A>): Maybe<A> {\n        return this\n    }\n\n    toBool(): boolean {\n        return true\n    }\n}\n\nclass Nothing<A> implements Maybe<A> {\n    public tag: \"nothing\" = \"nothing\"\n\n    constructor() { }\n\n    withDefault(value: A): A {\n        return value\n    }\n\n    map<B>(_: (a: A) => B): Maybe<B> {\n        return new Nothing()\n    }\n\n    andThen<B>(_: (a: A) => Maybe<B>): Maybe<B> {\n        return new Nothing()\n    }\n\n    orElse(f: () => Maybe<A>): Maybe<A> {\n        return f()\n    }\n\n    toBool(): boolean {\n        return false\n    }\n}\n\nexport function combine<A>(maybes: Array<Maybe<A>>): Maybe<Array<A>> {\n    return maybes.reduce(\n        (maybeArray, maybeItem) =>\n            map2(\n                (array, item) => {\n                    array.push(item)\n                    return array\n                },\n                maybeArray,\n                maybeItem,\n            ),\n        just<Array<A>>([])\n    )\n}\n","import * as Maybe from './Maybe'\nimport * as Result from './Result'\nimport * as Decoder from './Decoder'\n\ntype Dispatch<A> = (a: A) => void\n\nexport type Task<A> = {\n    tag: \"Task\",\n    execute: (dispatch: Dispatch<A>) => void\n}\n\nfunction of<A>(execute: (dispatch: Dispatch<A>) => void): Task<A> {\n    return { tag: \"Task\", execute }\n}\n\nexport function succeed<A>(a: A): Task<A> {\n    return of(\n        (dispatch: Dispatch<A>) => {\n            dispatch(a)\n        }\n    )\n}\n\nexport function map<A, B>(cmd: Task<A>, f: (a: A) => B): Task<B> {\n    return of(\n        (dispatch: Dispatch<B>) => {\n            cmd.execute((a: A) => dispatch(f(a)))\n        }\n    )\n}\n\nexport function andThen<A, B>(cmd: Task<A>, f: (a: A) => Task<B>): Task<B> {\n    return of(\n        (dispatch: Dispatch<B>) => {\n            cmd.execute((a: A) => {\n                f(a).execute(dispatch)\n            })\n        }\n    )\n}\n\nexport function map2<A, B, C>(cmd: Task<A>, cmdB: Task<B>, f: (a: A, b: B) => C): Task<C> {\n    return andThen(\n        cmd,\n        a => map(cmdB, b => f(a, b))\n    )\n}\n\nexport function none<T>(): Task<T> {\n    return of(() => {})\n}\n\nexport function saveToLocalStorage<A>(key: string, value: unknown): Task<A> {\n    return of (\n        (_) => {\n            localStorage.setItem(key, JSON.stringify(value))\n        }\n    )\n}\n\nexport function getFromLocalStorage(key: string): Task<Maybe.Maybe<string>> {\n    return of(\n        (dispatch) => {\n            const stateString = localStorage.getItem(key)\n\n            if (stateString !== null) {\n                dispatch(Maybe.just(stateString))\n            } else {\n                dispatch(Maybe.nothing())\n            }\n        }\n    )\n}\n\nexport function preventDefault<T>(event: Event): Task<T> {\n    return of(\n        (_) => {\n            event.preventDefault()\n        }\n    )\n}\n\nexport function waitMilliseconds(milliseconds: number): Task<globalThis.Date> {\n    return of(\n        (dispatch) => {\n            setTimeout(() => dispatch(new Date()), milliseconds)\n        }\n    )\n}\n\nexport function getRectOf(\n    id: string\n) : Task<Maybe.Maybe<{ x: number, y: number, width: number, height: number }>> {\n    return of(\n        (dispatch) => {\n            try {\n                const elem = document.getElementById(id)\n\n                if (elem === null) {\n                    dispatch(Maybe.nothing())\n                } else {\n                    const rect = elem.getBoundingClientRect()\n\n                    dispatch(\n                        Maybe.just({\n                            x: rect.x,\n                            y: rect.y,\n                            width: rect.width,\n                            height: rect.height,\n                        })\n                    )\n                }\n            } catch (e) {\n                console.error(e)\n                dispatch(Maybe.nothing())\n            }\n        }\n    )\n}\n","import * as Cmd from './utils/Task'\n\nexport type Update<A, B> =\n    { tag: 'Update', state: A, cmds: Array<Cmd.Task<B>> }\n\nexport function of<A, B>(state: A, cmds: Array<Cmd.Task<B>>): Update<A, B> {\n    return { tag: 'Update', state, cmds }\n}\n\nexport function pure<A, B>(state: A): Update<A, B> {\n    return of(state, [])\n}\n\nexport function map<A, B, C>(update: Update<A, C>, f: (a: A) => B): Update<B, C> {\n    return of(f(update.state), update.cmds)\n}\n\nexport function andThen<A, B, C>(update: Update<A, C>, f: (a: A) => Update<B, C>): Update<B, C> {\n    const { state, cmds } = update\n\n    const { state: newState, cmds: cmds0 } = f(state)\n\n    return of(newState, [...cmds, ...cmds0])\n}\n\nexport function mapCmd<A, C, D>(update: Update<A, C>, f: (c: C) => D): Update<A, D> {\n    return of(update.state, update.cmds.map(cmd => Cmd.map(cmd, f)))\n}\n\nexport function mapBoth<A, B, C, D>(\n    update: Update<A, C>,\n    f: (a: A) => B,\n    g: (c: C) => D,\n): Update<B, D> {\n    return map(mapCmd(update, g), f)\n}\n\nexport function addCmd<A, B>(update: Update<A, B>, cmd: Cmd.Task<B>): Update<A, B> {\n    return of(update.state, [...update.cmds, cmd])\n}\n","\nexport function upperCaseFirst(string: string): string {\n    return string[0].toUpperCase() + string.substring(1)\n}\n\nexport function assertNever(never: never): void {\n    console.warn(`Value of tipe never`, never)\n}\n\n/** Structural equality */\nexport function equals<A>(a: A, b: A): boolean {\n    if (a instanceof Array && b instanceof Array) {\n        return a.length === b.length && a.every((x, i) => equals(x, b[i]))\n    }\n\n    if (isObject(a) && isObject(b)) {\n        for (const key of Object.keys(a)) {\n            if (!(key in b) || !equals(a[key], b[key])) {\n                return false\n            }\n        }\n\n        for (const key of Object.keys(b)) {\n            if (!(key in a)) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    // NaN values are not equal between themselves or each other.\n    // Without this, `equals(NaN, NaN)` would return `false`.\n    if (a !== a && b !== b) {\n        return true;\n    }\n\n    return a === b\n}\n\nexport const eq = <A>(a: A) => (b: A) => equals(a, b)\n\nexport function compareStrings(a: string, b: string): -1 | 0 | 1 {\n    if (a < b)\n        return -1\n    else if (a === b)\n        return 0\n    else\n        return 1\n}\n\nexport function compareNumbers(a: number, b: number): -1 | 0 | 1 {\n    if (a < b) {\n        return -1\n    }\n    if (a === b) {\n        return 0\n    }\n    return 1\n}\n\nexport function debug<A>(tag: string, value: A): A {\n    console.log(tag, value)\n    return value\n}\n\n\nexport function pipe<A, B>(\n    a: A,\n    f: (a: A) => B,\n): B {\n    return f(a)\n}\n\nexport function pipe2<A, B, C>(\n    a: A,\n    f: (a: A) => B,\n    g: (b: B) => C,\n): C {\n    return g(f(a))\n}\n\nexport function pipe3<A, B, C, D>(\n    a: A,\n    f: (a: A) => B,\n    g: (b: B) => C,\n    h: (c: C) => D,\n): D {\n    return h(g(f(a)))\n}\n\n/** Understand some type as a literal.\n * \n * ```ts\n * let foo = 'bar'\n * > foo : string\n * let foo = literal('bar')\n * > foo : 'bar'\n * ```\n*/\nexport function literal<A extends string | number | null | undefined | boolean>(a: A): A {\n    return a\n}\n\n/** Take a value and return the same value. This functions gives me the possibility to\n * annotate the type I intend the value to be and thus avoid an unsafe cast.\n*/\nexport function id<A>(a: A): A {\n    return a\n}\n\nexport function isObject(a: unknown): a is { [key: string]: unknown } {\n    return typeof a === 'object' && a !== null\n}\n\n","/**\n * La distancia de Levenshtein es una forma de calcular cuan \"parecidas\" son dos strings cualquiera.\n * \n * El algoritmo base es simple. Ver https://en.wikipedia.org/wiki/Levenshtein_distance\n * \n * Se complejiza porque es necesario optimizarlo un poco.\n*/\n\n// --- Memoize the intermediate results (a la dynamic programming) ---\n\ntype Table = {\n    array: Array<number | undefined>,\n    length: number,\n}\n\nfunction table(a: number, b: number): Table {\n    return { array: new Array(a * b), length: a }\n}\n\nfunction get(table: Table, a: number, b: number): number | undefined {\n    return table.array[a * table.length + b]\n}\n\nfunction set(table: Table, a: number, b: number, value: number): void {\n    table.array[a * table.length + b] = value\n}\n\n// --- Levenshtein distance ---\n\n\nfunction tail(a: string): string {\n    return a.substring(1)\n}\n\nexport function distance(a: string, b: string): number {\n    return lev(table(a.length, b.length), a, b)\n}\n\n/** This is the function that matches with the definition at:\n * https://en.wikipedia.org/wiki/Levenshtein_distance#Definition\n */\nfunction lev(table: Table, a: string, b: string,): number {\n    const [a_, b_] = [a.length, b.length]\n\n    if (b_ === 0)\n        return a_\n\n    if (a_ === 0)\n        return b_\n\n    if (a[0] === b[0])\n        return lev_(table, tail(a), tail(b))\n\n    return 1 + Math.min(\n        lev_(table, tail(a), b),\n        lev_(table, a, tail(b)),\n        lev_(table, tail(a), tail(b))\n    )\n}\n\n/** This is the function that memoizes the results in the table\n * to avoid calculating the same result over and over.\n * Mutates the table.\n */\nfunction lev_(table: Table, a: string, b: string,): number {\n    const distance = get(table, a.length, b.length)\n\n    if (distance !== undefined) {\n        return distance\n    } else {\n        const distance_ = lev(table, a, b)\n\n        set(table, a.length, b.length, distance_)\n\n        return distance_\n    }\n}\n","import * as Utils from '../utils/Utils'\n\nexport type Html<Evt> =\n    | { type: 'Html', nodeType: 'node', tagName: string, attributes: Array<Attribute<Evt>>, children: Array<Html<Evt>> }\n    | { type: 'Html', nodeType: 'text', text: string }\n\nexport function node<Evt>(\n    tagName: string,\n    attributes: Array<Attribute<Evt>>,\n    children: Array<Html<Evt>>\n): Html<Evt> {\n    return { type: 'Html', nodeType: 'node', tagName, attributes, children }\n}\n\nexport function text<Evt>(text: string): Html<Evt> {\n    return { type: 'Html', nodeType: 'text', text }\n}\n\nexport function map<A, B>(html: Html<A>, f: (a: A) => B): Html<B> {\n    switch (html.nodeType) {\n        case 'node':\n            return node(\n                html.tagName,\n                html.attributes.map(attr => mapAttribute(attr, f)),\n                html.children.map(child => map(child, f))\n            )\n        case 'text':\n            return html\n    }\n}\n\n// Attr\n\nexport type Attribute<Evt> =\n    | { tag: 'attribute', name: string, value: string }\n    | { tag: 'property', name: string, value: unknown }\n    | { tag: 'eventHandler', eventName: string, handler: (event: Event) => Evt }\n    | { tag: 'style', property: string, value: string }\n    | { tag: 'class', value: string }\n\nexport function attribute<Evt>(name: string, value: string): Attribute<Evt> {\n    return { tag: 'attribute', name, value }\n}\n\nexport function property<Evt>(name: string, value: unknown): Attribute<Evt> {\n    return { tag: 'property', name, value }\n}\n\nexport function on<Evt>(eventName: string, handler: (event: Event) => Evt): Attribute<Evt> {\n    return { tag: 'eventHandler', eventName, handler }\n}\n\nexport function style<Evt>(property: string, value: string): Attribute<Evt> {\n    return { tag: 'style', property, value }\n}\n\nexport function class_<A>(className: string): Attribute<A> {\n    return { tag: 'class', value: className }\n}\n\nfunction mapAttribute<A, B>(attribute: Attribute<A>, f: (a: A) => B): Attribute<B> {\n    switch (attribute.tag) {\n        case 'eventHandler':\n            return on(attribute.eventName, (a) => f(attribute.handler(a)))\n        default:\n            return attribute\n    }\n}\n","import * as Maybe from '../utils/Maybe'\r\n\r\n// Color\r\n\r\nexport type Color =\r\n    | Rgba\r\n    | Hex\r\n    | Hsl\r\n\r\nexport function toCssString(color: Color): string {\r\n    switch (color.tag) {\r\n        case \"Rgba\":\r\n            return `rgba(${Math.floor(color.r * 255)}, ${Math.floor(color.g * 255)}, ${Math.floor(color.b * 255)}, ${color.a})`\r\n        case \"Hex\":\r\n            return `#${color.hex}`\r\n        case \"Hsl\":\r\n            return `hsl(${color.h}, ${Math.floor(color.s * 100)}%, ${Math.floor(color.l * 100)}%)`\r\n    }\r\n}\r\n\r\n\r\nexport function decode(json: any): Maybe.Maybe<Color> {\r\n    if (typeof json === \"object\"\r\n        && typeof json.r === \"number\"\r\n        && typeof json.g === \"number\"\r\n        && typeof json.b === \"number\"\r\n        && typeof json.a === \"number\"\r\n    )\r\n        return Maybe.just(rgba(json.r, json.g, json.b, json.a))\r\n\r\n    if (typeof json === \"object\"\r\n        && typeof json.hex === \"string\"\r\n    )\r\n        return Maybe.just(hex(json.hex))\r\n\r\n    return Maybe.nothing()\r\n}\r\n\r\n// --- Rgba\r\n\r\ntype Rgba = {\r\n    tag: \"Rgba\",\r\n    r: 0 | number | 1,\r\n    g: 0 | number | 1,\r\n    b: 0 | number | 1,\r\n    a: 0 | number | 1\r\n}\r\n\r\nexport function rgba(r: number, g: number, b: number, a: number): Color {\r\n    return { tag: \"Rgba\", r, g, b, a }\r\n}\r\n\r\nexport function rgba255(r: number, g: number, b: number, a: number): Color {\r\n    return { tag: \"Rgba\", r: r / 255, g: g / 255, b: b / 255, a }\r\n}\r\n\r\nexport function withAlpha(rgba: Rgba, a: number): Color {\r\n    return { ...rgba, a }\r\n}\r\n\r\n// Hex\r\n\r\ntype Hex = {\r\n    tag: \"Hex\", hex: string\r\n}\r\n\r\nexport function hex(hex: string): Color {\r\n    return { tag: \"Hex\", hex }\r\n}\r\n\r\n// Hsl\r\n\r\ntype Hsl = {\r\n    tag: \"Hsl\",\r\n    h: 0 | number | 360,\r\n    s: 0 | number | 1,\r\n    l: 0 | number | 1,\r\n}\r\n\r\nexport function hsl(h: 0 | number | 360, s: 0 | number | 1, l: 0 | number | 1): Color {\r\n    return {\r\n        tag: \"Hsl\",\r\n        h, s, l\r\n    }\r\n}\r\n\r\n/** Useful colors:\r\n */\r\n\r\nexport const text = hsl(0, 0, 0.57)\r\nexport const background = hsl(0, 0, 0.08)\r\nexport const accent = hex('7F8BF8')\r\n","import * as Html from '../vdom/Html'\r\nimport * as Color from '../style/Color'\r\n\r\nimport './Layout.css'\r\n\r\n// --- LAYOUT\r\n\r\n/** Helpers to create flexbox layouts. `Layout` is just Html using flexbox and optionally reading state from a context.\r\n*/\r\nexport type Layout<Event, Context> = {\r\n    type: 'Layout',\r\n    build: (context: Context) => Html.Html<Event>,\r\n}\r\n    | Html.Html<Event>\r\n\r\nexport function toHtml<Event, Context>(\r\n    context: Context,\r\n    layout: Layout<Event, Context>,\r\n): Html.Html<Event> {\r\n    if (layout.type === 'Layout') {\r\n        return layout.build(context)\r\n    }\r\n    return layout\r\n}\r\n\r\nexport function none<Event, Context>(): Layout<Event, Context> {\r\n    return Html.text('')\r\n}\r\n\r\nexport function node<E, C>(\r\n    flexDirection: 'row' | 'column',\r\n    htmlTag: string,\r\n    attributes: Array<Attribute<E, C>>,\r\n    children: Array<Layout<E, C>>,\r\n): Layout<E, C> {\r\n    return {\r\n        type: 'Layout',\r\n        build: (context: C) => Html.node(\r\n            htmlTag,\r\n            [\r\n                ...toHtmlAttributes(attributes, context, flexDirection),\r\n                Html.style('display', 'flex'),\r\n                Html.style('flex-direction', flexDirection),\r\n            ],\r\n            children.map(child => toHtml(context, child))\r\n        ),\r\n    }\r\n}\r\n\r\nexport function column<E, C>(\r\n    htmlTag: string,\r\n    attributes: Array<Attribute<E, C>>,\r\n    children: Array<Layout<E, C>>,\r\n): Layout<E, C> {\r\n    return node(\r\n        'column',\r\n        htmlTag,\r\n        [\r\n            ...attributes,\r\n            Html.style('display', 'flex'),\r\n            Html.style('flex-direction', 'column'),\r\n        ],\r\n        children\r\n    )\r\n}\r\n\r\nexport function row<E, C>(\r\n    htmlTag: string,\r\n    attributes: Array<Attribute<E, C>>,\r\n    children: Array<Layout<E, C>>,\r\n): Layout<E, C> {\r\n    return node(\r\n        'row',\r\n        htmlTag,\r\n        [\r\n            ...attributes,\r\n            Html.style('display', 'flex'),\r\n            Html.style('flex-direction', 'row'),\r\n        ],\r\n        children\r\n    )\r\n}\r\n\r\nexport function text<E, C>(text: string): Layout<E, C> {\r\n    return Html.text(text)\r\n}\r\n\r\nexport function space<E, C>(size: number): Layout<E, C> {\r\n    return Html.node(\r\n        'div',\r\n        [\r\n            Html.style('display', 'inline-block'),\r\n            Html.style('width', size + 'px'),\r\n            Html.style('height', size + 'px'),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\n/** Dibuja al nodo `below` 'flotando' debajo de `above`, como un menú o un tooltip. */\r\nexport function below<E, C>(\r\n    flexDirection: 'row' | 'column',\r\n    tagName: string,\r\n    attributes: Array<Attribute<E, C>>,\r\n    children: Array<Layout<E, C>>,\r\n    below: {\r\n        flexDirection: 'row' | 'column',\r\n        tagName: string,\r\n        attributes: Array<Attribute<E, C>>,\r\n        children: Array<Layout<E, C>>,\r\n    }\r\n): Layout<E, C> {\r\n    return node<E, C>(\r\n        flexDirection,\r\n        tagName,\r\n        [\r\n            ...attributes,\r\n            Html.style('position', 'relative'),\r\n        ],\r\n        [\r\n            ...children,\r\n            node(\r\n                below.flexDirection,\r\n                below.tagName,\r\n                [\r\n                    ...below.attributes,\r\n                    Html.style('position', 'absolute'),\r\n                    Html.style('top', '100%'),\r\n                ],\r\n                below.children\r\n            )\r\n        ]\r\n    )\r\n}\r\n\r\nexport function usingContext<E, Context>(useContext: (context: Context) => Layout<E, Context>): Layout<E, Context> {\r\n    return {\r\n        type: 'Layout',\r\n        build: context => {\r\n            return toHtml(context, useContext(context))\r\n        }\r\n    }\r\n}\r\n\r\nexport function map<A, B, C>(layout: Layout<A, C>, f: (a: A) => B): Layout<B, C> {\r\n    return {\r\n        type: 'Layout',\r\n        build: context => Html.map(toHtml(context, layout), f)\r\n    }\r\n}\r\n\r\n// --- ATTRIBUTES\r\n\r\n/** Layouts can receive the same attributes from the `Html` module, and also a\r\n * `Layout.attributeUsingContext` that uses the context to create an `Html.Attribute`.\r\n */\r\nexport type Attribute<Event, Context> =\r\n    | Html.Attribute<Event>\r\n    | { tag: 'attributeUsingContext', htmlAttribute: (context: Context) => Html.Attribute<Event> }\r\n    | { tag: 'attributeUsingFlexDirection', htmlAttribute: (flexDirection: 'row' | 'column') => Html.Attribute<Event> }\r\n\r\n/** Use the current context to create a Html attribute.\r\n * For example, if the context is the color scheme:\r\n * \r\n * ```ts\r\n * Layout.column(\r\n *   'div',\r\n *   [\r\n *     Layout.useContext(colorScheme => Layout.color(colorScheme.textColor)),\r\n *     Layout.useContext(colorScheme => Layout.backgroundColor(colorScheme.backgroundColor)),\r\n *   ],\r\n *   [\r\n *     Layout.text('Hello world'),\r\n *   ]\r\n * )\r\n * ```\r\n*/\r\nexport function attributeUsingContext<E, Context>(\r\n    htmlAttribute: (context: Context) => Html.Attribute<E>\r\n): Attribute<E, Context> {\r\n    return {\r\n        tag: 'attributeUsingContext',\r\n        htmlAttribute\r\n    }\r\n}\r\n\r\nfunction attributeUsingFlexDirection<E, C>(\r\n    htmlAttribute: (flexDirection: 'row' | 'column') => Html.Attribute<E>\r\n): Attribute<E, C> {\r\n    return {\r\n        tag: 'attributeUsingFlexDirection',\r\n        htmlAttribute\r\n    }\r\n}\r\n\r\nfunction toHtmlAttribute<E, C>(attribute: Attribute<E, C>, context: C, flexDirection: 'row' | 'column'): Html.Attribute<E> {\r\n    if (attribute.tag === 'attributeUsingContext') {\r\n        return attribute.htmlAttribute(context)\r\n    }\r\n    if (attribute.tag === 'attributeUsingFlexDirection') {\r\n        return attribute.htmlAttribute(flexDirection)\r\n    }\r\n    return attribute\r\n}\r\n\r\nfunction toHtmlAttributes<E, C>(attributes: Array<Attribute<E, C>>, context: C, flexDirection: 'row' | 'column'): Array<Html.Attribute<E>> {\r\n    return attributes.map(attr => toHtmlAttribute(attr, context, flexDirection))\r\n}\r\n\r\n// --- MERGED LAYOUTS (helper)\r\n\r\ntype MergedLayouts<Event, Context> = {\r\n    type: 'MergedLayouts',\r\n    build: (context: Context) => Array<Html.Html<Event>>,\r\n}\r\n\r\nfunction merge<E, C>(layouts: Array<Layout<E, C>>): MergedLayouts<E, C> {\r\n    return {\r\n        type: 'MergedLayouts',\r\n        build: context => layouts.map(layout => toHtml(context, layout)),\r\n    }\r\n}\r\n\r\n/** Attributes */\r\n\r\nexport function spacing<A>(x: number): Html.Attribute<A> {\r\n    return Html.style('gap', `${x}px`)\r\n}\r\n\r\nexport function padding<A>(x: number): Html.Attribute<A> {\r\n    return Html.style('padding', `${x}px`)\r\n}\r\n\r\nexport function paddingXY<A>(x: number, y: number): Html.Attribute<A> {\r\n    return Html.style('padding', `${y}px ${x}px`)\r\n}\r\n\r\nexport function centerX<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.style('align-items', 'center')\r\n            : Html.style('justify-content', 'center')\r\n    )\r\n}\r\n\r\nexport function centerY<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.style('justify-content', 'center')\r\n            : Html.style('align-items', 'center')\r\n    )\r\n}\r\n\r\nexport function endX<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.style('align-items', 'end')\r\n            : Html.style('justify-content', 'flex-end')\r\n    )\r\n}\r\n\r\nexport function endY<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.style('justify-content', 'flex-end')\r\n            : Html.style('align-items', 'end')\r\n    )\r\n}\r\n\r\nexport function startX<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.style('align-items', 'start')\r\n            : Html.style('justify-content', 'flex-start')\r\n    )\r\n}\r\n\r\nexport function startY<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.style('justify-content', 'flex-start')\r\n            : Html.style('align-items', 'start')\r\n    )\r\n}\r\n\r\nexport function baselineY<E, C>(): Attribute<E, C> {\r\n    return attributeUsingFlexDirection(flexDirection =>\r\n        flexDirection === 'column'\r\n            ? Html.class_('')\r\n            : Html.style('align-items', 'baseline')\r\n    )\r\n}\r\n\r\nexport function color<A>(color: Color.Color): Html.Attribute<A> {\r\n    return Html.style('color', Color.toCssString(color))\r\n}\r\n\r\nexport function backgroundColor<A>(color: Color.Color): Html.Attribute<A> {\r\n    return Html.style('background-color', Color.toCssString(color))\r\n}\r\n\r\nexport function borderColor<A>(color: Color.Color): Html.Attribute<A> {\r\n    return Html.style('border-color', Color.toCssString(color))\r\n}\r\n\r\nexport function borderWidth<A>(width: number): Html.Attribute<A> {\r\n    return Html.style('border-width', `${Math.floor(width)}px`)\r\n}\r\n\r\nexport function fillPortion<A>(grow: number): Html.Attribute<A> {\r\n    return Html.style('flex-grow', `${grow}`)\r\n}\r\n\r\nexport function fullWidth<A>(): Html.Attribute<A> {\r\n    return Html.class_('w-full')\r\n}\r\n\r\nexport function inlineText<A>(text: string): Html.Html<A> {\r\n    return Html.node(\r\n        \"div\",\r\n        [\r\n            Html.style(\"display\", \"inline-flex\"),\r\n            Html.style(\"white-space\", \"nowrap\"),\r\n        ],\r\n        [\r\n            Html.text(text),\r\n        ]\r\n    )\r\n}\r\n\r\nexport function widthPx<A>(px: number): Html.Attribute<A> {\r\n    return Html.style('width', `${px}px`)\r\n}\r\n\r\nexport function heightPx<A>(px: number): Html.Attribute<A> {\r\n    return Html.style('height', `${px}px`)\r\n}\r\n","import * as Html from '../vdom/Html'\r\nimport * as Layout from './Layout'\r\nimport './Input.css'\r\n\r\nexport function onInput<A>(handler: (value: string) => A): Html.Attribute<A> {\r\n    return Html.on(\"input\", event => handler((event.target as any).value));\r\n}\r\n\r\nexport function onChange<A>(handler: (value: boolean) => A): Html.Attribute<A> {\r\n    return Html.on(\"change\", event => handler((event.target as any).checked));\r\n}\r\n\r\nexport function text<A, C>(\r\n    attributes: Array<Layout.Attribute<A, C>>,\r\n    args: {\r\n        id: string,\r\n        label: Layout.Layout<A, C>,\r\n        value: string,\r\n        attributes: Array<Html.Attribute<A>>,\r\n    }\r\n): Layout.Layout<A, C> {\r\n    return Layout.column(\r\n        \"label\",\r\n        [\r\n            Layout.spacing(14),\r\n            Html.attribute(\"for\", args.id),\r\n            Html.style(\"width\", \"100%\"),\r\n            Html.style(\"height\", \"100%\"),\r\n            ...attributes,\r\n        ],\r\n        [\r\n            args.label,\r\n            Layout.column(\r\n                \"input\",\r\n                [\r\n                    Html.attribute(\"id\", args.id),\r\n                    Html.attribute(\"value\", args.value),\r\n                    Html.style(\"width\", \"100%\"),\r\n                    Html.style(\"height\", \"100%\"),\r\n                    Html.style(\"border-radius\", \"5px\"),\r\n                    ...args.attributes,\r\n                ],\r\n                []\r\n            )\r\n        ]\r\n    )\r\n}\r\n\r\nexport function button<A, C>(\r\n    attributes: Array<Layout.Attribute<A, C>>,\r\n    args: {\r\n        onClick: (event: any) => A,\r\n        label: Layout.Layout<A, C>,\r\n    }\r\n): Layout.Layout<A, C> {\r\n    return Layout.column(\r\n        \"button\",\r\n        [\r\n            Html.on(\"click\", args.onClick),\r\n            ...attributes\r\n        ],\r\n        [args.label]\r\n    )\r\n}\r\n","import * as Color from './Color'\r\n\r\nimport * as Html from '../vdom/Html'\r\n\r\nimport * as Layout from '../layout/Layout'\r\n\r\nexport function wrapper<A, C>(\r\n    htmlTag: string,\r\n    attributes: Array<Layout.Attribute<A, C>>,\r\n    icon: Html.Html<never>\r\n): Layout.Layout<A, C> {\r\n    return Layout.row(\r\n        htmlTag,\r\n        [\r\n            Layout.centerX(),\r\n            Layout.centerY(),\r\n            Layout.widthPx(16),\r\n            Layout.heightPx(16),\r\n            Html.style(\"border-radius\", \"50%\"),\r\n            Layout.backgroundColor(Color.background),\r\n            ...attributes\r\n        ],\r\n        [ icon ]\r\n    )\r\n}\r\n\r\nexport function button<A, C>(attributes: Array<Layout.Attribute<A, C>>, icon: Html.Html<never>): Layout.Layout<A, C> {\r\n    return wrapper(\r\n        \"button\",\r\n        attributes,\r\n        icon\r\n    )\r\n}\r\n\r\nexport function play<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"media-play.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function delete_<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"trash.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function options<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"ellipses.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function chevronUp<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"chevron-top.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function chevronDown<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"chevron-bottom.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function chevronLeft<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"chevron-left.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function chevronRight<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"chevron-right.svg\"),\r\n            Layout.widthPx(8),\r\n            Layout.heightPx(8),\r\n        ],\r\n        []\r\n    )\r\n}\r\n","import * as Maybe from './Maybe'\n\ntype ResultInterface<A, E> = {\n    map: <B>(fn: (a: A) => B) => Result<B, E>,\n    andThen: <B>(fn: (a: A) => Result<B, E>) => Result<B, E>,\n    mapError: <F>(fn: (e: E) => F) => Result<A, F>,\n    withDefault: (default_: A) => A,\n    match: <B>(mapValue: (a: A) => B, mapError: (e: E) => B) => B,\n    orElse: <F>(fn: (e: E) => Result<A, F>) => Result<A, F>,\n}\n\nexport type Result<A, E> =\n    | { tag: 'ok'; value: A } & ResultInterface<A, E>\n    | { tag: 'error'; error: E } & ResultInterface<A, E>\n\nexport function ok<A, E>(value: A): Result<A, E> {\n    return {\n        tag: 'ok',\n        value,\n        map: fn => ok(fn(value)),\n        andThen: fn => fn(value),\n        mapError: _ => ok(value),\n        withDefault: _ => value,\n        match: (fn, _) => fn(value),\n        orElse: _ => ok(value)\n    }\n}\n\nexport function error<A, E>(err: E): Result<A, E> {\n    return {\n        tag: 'error',\n        error: err,\n        map: _ => error(err),\n        andThen: _ => error(err),\n        mapError: fn => error(fn(err)),\n        withDefault: default_ => default_,\n        match: (_, fn) => fn(err),\n        orElse: fn => fn(err),\n    }\n}\n\nexport function map2<A, B, C, E>(\n    resultA: Result<A, E>,\n    resultB: Result<B, E>,\n    fn: (a: A, b: B) => C\n): Result<C, E> {\n    return resultA.andThen(a =>\n        resultB.map(b => fn(a, b))\n    )\n}\n\nexport function andMap<A, B, E>(\n    wrappedFunction: Result<(a: A) => B, E>,\n    wrappedValue: Result<A, E>,\n): Result<B, E> {\n    if (wrappedFunction.tag === 'ok') {\n        return wrappedValue.tag === 'ok'\n            ? ok(wrappedFunction.value(wrappedValue.value))\n            : error(wrappedValue.error)\n    }\n    return error(wrappedFunction.error)\n}\n\nexport function toMaybe<A, E>(result: Result<A, E>): Maybe.Maybe<A> {\n    return result.tag === 'ok' ? Maybe.just(result.value) : Maybe.nothing()\n}\n\nexport function fromMaybe<A, E>(err: E, maybe: Maybe.Maybe<A>): Result<A, E> {\n    return maybe\n        .map(a => ok<A, E>(a))\n        .withDefault(error(err))\n}\n\nexport function collect<A, E>(array: Array<Result<A, E>>): Result<Array<A>, E> {\n    return array.reduce(\n        (previousValue, currentValue) =>\n            map2(\n                previousValue,\n                currentValue,\n                (array, element) =>\n                    [ ...array, element ]\n            ),\n        ok<Array<A>, E>([])\n    )\n}\n","\r\nexport function pair<A, B>(a: A, b: B): [A, B] {\r\n    return [a, b]\r\n}\r\n\r\nexport function first<A, B>(pair: [A, B]): A {\r\n    return pair[0]\r\n}\r\n\r\nexport function second<A, B>(pair: [A, B]): B {\r\n    return pair[1]\r\n}\r\n","import * as Result from './Result'\nimport * as Utils from './Utils'\nimport * as Maybe from './Maybe'\nimport * as Array_ from './Array'\nimport * as Pair from './Pair'\n\n// https://package.elm-lang.org/packages/elm/json/latest/Json-Decode\n\nexport type Decoder<A> =\n    { tag: 'Decoder', decoder: (a: unknown) => Result.Result<A, Error> }\n\nexport function decode<A>(a: unknown, decoder: Decoder<A>): Result.Result<A, Error> {\n    return decoder.decoder(a)\n}\n\nfunction decoder<A>(decoder: (a: unknown) => Result.Result<A, Error>): Decoder<A> {\n    return { tag: 'Decoder', decoder }\n}\n\nexport const string: Decoder<string> =\n    decoder(\n        (a: unknown) =>\n            typeof a === 'string'\n                ? Result.ok<string, Error>(a)\n                : Result.error<string, Error>({ tag: 'expectingString' })\n    )\n\nexport const boolean: Decoder<boolean> =\n    decoder(\n        (a: unknown) =>\n            typeof a === 'boolean'\n                ? Result.ok<boolean, Error>(a)\n                : Result.error<boolean, Error>({ tag: 'expectingBoolean' })\n    )\n\nexport const number: Decoder<number> =\n    decoder(\n        (a: unknown) =>\n            typeof a === 'number'\n                ? Result.ok<number, Error>(a)\n                : Result.error<number, Error>({ tag: 'expectingNumber' })\n    )\n\nexport function literal<A extends string | number | boolean | null | undefined>(literal: A): Decoder<A> {\n    return decoder(\n        (a: unknown) =>\n            a === literal\n                ? Result.ok<A, Error>(literal)\n                : Result.error<A, Error>({ tag: 'expectingLiteral', literal })\n    )\n}\n\nexport const null_: Decoder<null> =\n    literal<null>(null)\n\nexport function array<A>(elementDecoder: Decoder<A>): Decoder<Array<A>> {\n    return decoder(\n        (as: unknown) =>\n            as instanceof Array\n                ? Result.collect(\n                    as.map(\n                        (a, index) =>\n                            decode(a, elementDecoder)\n                                .mapError<Error>(error => ({ tag: 'atArrayIndex', index, error }))\n                    )\n                  )\n                : Result.error<Array<A>, Error>({ tag: 'expectingArray' })\n    )\n}\n\nexport function property<A>(propertyName: string, propertyDecoder: Decoder<A>): Decoder<A> {\n    return decoder(\n        (a: unknown) =>\n            Utils.isObject(a)\n                ? decode(a[propertyName], propertyDecoder)\n                    .mapError<Error>(error => ({ tag: 'atObjectProperty', propertyName, error }))\n                : Result.error<A, Error>({ tag: 'expectingObject' })\n    )\n}\n\nexport function index<A>(index: number, elementDecoder: Decoder<A>): Decoder<A> {\n    return decoder(\n        (as: unknown) =>\n            as instanceof Array\n                ? decode(as[index], elementDecoder)\n                    .mapError<Error>(error => ({ tag: 'atArrayIndex', index, error }))\n                : Result.error<A, Error>({ tag: 'expectingArray' })\n    )\n}\n\nexport function oneOf<A>(decoder_: Decoder<A>, ...decoders: Array<Decoder<A>>): Decoder<A> {\n    return decoder(\n        (a: unknown) =>\n            decoders.reduce(\n                (previousResult, currentDecoder) =>\n                    previousResult.match(\n                        a => Result.ok(a),\n                        _ => decode(a, currentDecoder)\n                    ),\n                decode(a, decoder_)\n            )\n    )\n}\n\nexport type Error =\n    | { tag: 'expectingString' }\n    | { tag: 'expectingBoolean' }\n    | { tag: 'expectingNumber' }\n    | { tag: 'expectingLiteral', literal: unknown }\n    | { tag: 'expectingArray' }\n    | { tag: 'atArrayIndex', index: number, error: Error }\n    | { tag: 'expectingObject' }\n    | { tag: 'atObjectProperty', propertyName: string, error: Error }\n    | { tag: 'message', message: string }\n\nexport function errorToString(error: Error): string {\n    switch (error.tag) {\n        case 'expectingString':\n            return 'Expecting a string'\n        case 'expectingBoolean':\n            return 'Expecting a boolean'\n        case 'expectingNumber':\n            return 'Expecting a number'\n        case 'expectingLiteral':\n            return `Expecting the literal value '${error.literal}'`\n        case 'expectingArray':\n            return 'Expecting an array'\n        case 'atArrayIndex':\n            return `${errorToString(error.error)} at array index ${error.index}`\n        case 'expectingObject':\n            return 'Expecting an object'\n        case 'atObjectProperty':\n            return `${errorToString(error.error)} at object property '${error.propertyName}'`\n        case 'message':\n            return error.message\n    }\n}\n\nexport function map<A, B>(decoder_: Decoder<A>, mapFunction: (a: A) => B): Decoder<B> {\n    return decoder(\n        (x: unknown) =>\n            decode(x, decoder_)\n                .map(mapFunction)\n    )\n}\n\nexport function map2<A, B, C>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    mapFunction: (a: A, b: B) => C\n): Decoder<C> {\n    return decoder(\n        (x: unknown) =>\n            Result.map2(\n                decode(x, decoderA),\n                decode(x, decoderB),\n                mapFunction\n            )\n    )\n}\n\nexport function andMap<A, B>(\n    decoderFunction: Decoder<(a: A) => B>,\n    decoderArgument: Decoder<A>\n): Decoder<B> {\n    return map2(decoderFunction, decoderArgument, (fn, arg) => fn(arg))\n}\n\nexport function andThen<A, B>(decoder_: Decoder<A>, func: (a: A) => Decoder<B>): Decoder<B> {\n    return decoder(\n        (x: unknown) =>\n            decode(x, decoder_).andThen(\n                a => decode(x, func(a))\n            )\n    )\n}\n\n\nexport function map3<A, B, C, D>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    mapFunction: (a: A, b: B, c: C) => D\n): Decoder<D> {\n    return map2(\n        decoderA,\n        map2(\n            decoderB,\n            decoderC,\n            Pair.pair\n        ),\n        (a, [b, c]) => mapFunction(a, b, c)\n    )\n}\n\nexport function map4<A, B, C, D, E>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    mapFunction: (a: A, b: B, c: C, d: D) => E\n): Decoder<E> {\n    return map3(\n        decoderA,\n        decoderB,\n        map2(\n            decoderC,\n            decoderD,\n            Pair.pair\n        ),\n        (a, b, [c, d]) => mapFunction(a, b, c, d)\n    )\n}\n\nexport function map5<A, B, C, D, E, F>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E) => F\n): Decoder<F> {\n    return map4(\n        decoderA,\n        decoderB,\n        decoderC,\n        map2(\n            decoderD,\n            decoderE,\n            Pair.pair\n        ),\n        (a, b, c, [d, e]) => mapFunction(a, b, c, d, e)\n    )\n}\n\nexport function map6<A, B, C, D, E, F, G>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F) => G\n): Decoder<G> {\n    return map5(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        map2(\n            decoderE,\n            decoderF,\n            Pair.pair\n        ),\n        (a, b, c, d, [e, f]) => mapFunction(a, b, c, d, e, f)\n    )\n}\n\nexport function map7<A, B, C, D, E, F, G, H>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F, g: G) => H\n): Decoder<H> {\n    return map6(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        decoderE,\n        map2(\n            decoderF,\n            decoderG,\n            Pair.pair\n        ),\n        (a, b, c, d, e, [f, g]) => mapFunction(a, b, c, d, e, f, g)\n    )\n}\n\nexport function map8<A, B, C, D, E, F, G, H, I>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    decoderH: Decoder<H>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H) => I\n): Decoder<I> {\n    return map7(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        decoderE,\n        decoderF,\n        map2(\n            decoderG,\n            decoderH,\n            Pair.pair\n        ),\n        (a, b, c, d, e, f, [g, h]) => mapFunction(a, b, c, d, e, f, g, h)\n    )\n}\n\nexport function map9<A, B, C, D, E, F, G, H, I, J>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    decoderH: Decoder<H>,\n    decoderI: Decoder<I>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I) => J\n): Decoder<J> {\n    return map8(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        decoderE,\n        decoderF,\n        decoderG,\n        map2(\n            decoderH,\n            decoderI,\n            Pair.pair\n        ),\n        (a, b, c, d, e, f, g, [h, i]) => mapFunction(a, b, c, d, e, f, g, h, i)\n    )\n}\n\nexport function succeed<A>(a: A): Decoder<A> {\n    return decoder((_) => Result.ok(a))\n}\n\nexport function fail<A>(message: string): Decoder<A> {\n    return decoder((_) => Result.error<A, Error>({ tag: 'message', message }))\n}\n\nexport function maybe<A>(decoder_: Decoder<A>): Decoder<Maybe.Maybe<A>> {\n    return oneOf(\n        map(\n            property('tag', literal('nothing')),\n            _ => Maybe.nothing()\n        ),\n        map2(\n            property('tag', literal('just')),\n            property('value', decoder_),\n            (_, value) => Maybe.just(value)\n        )\n    )\n}\n\nexport function object<\n    KeyA extends string,\n    A,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n): Decoder<\n    { [key in KeyA]: A }\n> {\n    return map(\n        property<A>(keyA, decoderA),\n        (valueA) =>\n            ({\n                [keyA]: valueA,\n            } as any)\n    )\n}   \n\nexport function object2<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n> {\n    return map2(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        (valueA, valueB) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n            } as any)\n    )\n}\n\nexport function object3<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n> {\n    return map3(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        (valueA, valueB, valueC) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n            } as any)\n    )\n}\n\nexport function object4<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n    KeyD extends string,\n    D,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n    keyD: KeyD,\n    decoderD: Decoder<D>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n        & { [key in KeyD]: D }\n> {\n    return map4(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        property<D>(keyD, decoderD),\n        (valueA, valueB, valueC, valueD) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n                [keyD]: valueD,\n            } as any)\n    )\n}\n\nexport function object5<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n    KeyD extends string,\n    D,\n    KeyE extends string,\n    E,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n    keyD: KeyD,\n    decoderD: Decoder<D>,\n    keyE: KeyE,\n    decoderE: Decoder<E>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n        & { [key in KeyD]: D }\n        & { [key in KeyE]: E }\n> {\n    return map5(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        property<D>(keyD, decoderD),\n        property<E>(keyE, decoderE),\n        (valueA, valueB, valueC, valueD, valueE) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n                [keyD]: valueD,\n                [keyE]: valueE,\n            } as any)\n    )\n}\n\nexport function object6<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n    KeyD extends string,\n    D,\n    KeyE extends string,\n    E,\n    KeyF extends string,\n    F,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n    keyD: KeyD,\n    decoderD: Decoder<D>,\n    keyE: KeyE,\n    decoderE: Decoder<E>,\n    keyF: KeyF,\n    decoderF: Decoder<F>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n        & { [key in KeyD]: D }\n        & { [key in KeyE]: E }\n        & { [key in KeyF]: F }\n> {\n    return map6(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        property<D>(keyD, decoderD),\n        property<E>(keyE, decoderE),\n        property<F>(keyF, decoderF),\n        (valueA, valueB, valueC, valueD, valueE, valueF) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n                [keyD]: valueD,\n                [keyE]: valueE,\n                [keyF]: valueF,\n            } as any)\n    )\n}\n\nexport function object7<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n    KeyD extends string,\n    D,\n    KeyE extends string,\n    E,\n    KeyF extends string,\n    F,\n    KeyG extends string,\n    G,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n    keyD: KeyD,\n    decoderD: Decoder<D>,\n    keyE: KeyE,\n    decoderE: Decoder<E>,\n    keyF: KeyF,\n    decoderF: Decoder<F>,\n    keyG: KeyG,\n    decoderG: Decoder<G>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n        & { [key in KeyD]: D }\n        & { [key in KeyE]: E }\n        & { [key in KeyF]: F }\n        & { [key in KeyG]: G }\n> {\n    return map7(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        property<D>(keyD, decoderD),\n        property<E>(keyE, decoderE),\n        property<F>(keyF, decoderF),\n        property<G>(keyG, decoderG),\n        (valueA, valueB, valueC, valueD, valueE, valueF, valueG) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n                [keyD]: valueD,\n                [keyE]: valueE,\n                [keyF]: valueF,\n                [keyG]: valueG,\n            } as any)\n    )\n}\n\nexport function object8<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n    KeyD extends string,\n    D,\n    KeyE extends string,\n    E,\n    KeyF extends string,\n    F,\n    KeyG extends string,\n    G,\n    KeyH extends string,\n    H,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n    keyD: KeyD,\n    decoderD: Decoder<D>,\n    keyE: KeyE,\n    decoderE: Decoder<E>,\n    keyF: KeyF,\n    decoderF: Decoder<F>,\n    keyG: KeyG,\n    decoderG: Decoder<G>,\n    keyH: KeyH,\n    decoderH: Decoder<H>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n        & { [key in KeyD]: D }\n        & { [key in KeyE]: E }\n        & { [key in KeyF]: F }\n        & { [key in KeyG]: G }\n        & { [key in KeyH]: H }\n> {\n    return map8(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        property<D>(keyD, decoderD),\n        property<E>(keyE, decoderE),\n        property<F>(keyF, decoderF),\n        property<G>(keyG, decoderG),\n        property<H>(keyH, decoderH),\n        (valueA, valueB, valueC, valueD, valueE, valueF, valueG, valueH) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n                [keyD]: valueD,\n                [keyE]: valueE,\n                [keyF]: valueF,\n                [keyG]: valueG,\n                [keyH]: valueH,\n            } as any)\n    )\n}\n\n\nexport function object9<\n    KeyA extends string,\n    A,\n    KeyB extends string,\n    B,\n    KeyC extends string,\n    C,\n    KeyD extends string,\n    D,\n    KeyE extends string,\n    E,\n    KeyF extends string,\n    F,\n    KeyG extends string,\n    G,\n    KeyH extends string,\n    H,\n    KeyI extends string,\n    I,\n>(\n    keyA: KeyA,\n    decoderA: Decoder<A>,\n    keyB: KeyB,\n    decoderB: Decoder<B>,\n    keyC: KeyC,\n    decoderC: Decoder<C>,\n    keyD: KeyD,\n    decoderD: Decoder<D>,\n    keyE: KeyE,\n    decoderE: Decoder<E>,\n    keyF: KeyF,\n    decoderF: Decoder<F>,\n    keyG: KeyG,\n    decoderG: Decoder<G>,\n    keyH: KeyH,\n    decoderH: Decoder<H>,\n    keyI: KeyI,\n    decoderI: Decoder<I>,\n): Decoder<\n    { [key in KeyA]: A }\n        & { [key in KeyB]: B }\n        & { [key in KeyC]: C }\n        & { [key in KeyD]: D }\n        & { [key in KeyE]: E }\n        & { [key in KeyF]: F }\n        & { [key in KeyG]: G }\n        & { [key in KeyH]: H }\n        & { [key in KeyI]: I }\n> {\n    return map9(\n        property<A>(keyA, decoderA),\n        property<B>(keyB, decoderB),\n        property<C>(keyC, decoderC),\n        property<D>(keyD, decoderD),\n        property<E>(keyE, decoderE),\n        property<F>(keyF, decoderF),\n        property<G>(keyG, decoderG),\n        property<H>(keyH, decoderH),\n        property<I>(keyI, decoderI),\n        (valueA, valueB, valueC, valueD, valueE, valueF, valueG, valueH, valueI) =>\n            ({\n                [keyA]: valueA,\n                [keyB]: valueB,\n                [keyC]: valueC,\n                [keyD]: valueD,\n                [keyE]: valueE,\n                [keyF]: valueF,\n                [keyG]: valueG,\n                [keyH]: valueH,\n                [keyI]: valueI,\n            } as any)\n    )\n}\n\n\n\nfunction union2<\n    A,\n    B,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n): Decoder<A | B> {\n    return decoder(\n        data =>\n            decoderA\n                .decoder(data)\n                .map<A | B>(x => x)\n                .orElse(_ =>\n                    decoderB\n                        .decoder(data)\n                        .map<A | B>(x => x)    \n                )\n    )\n}\n\nexport function union3<\n    A,\n    B,\n    C,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n): Decoder<A | B | C> {\n    return union2(\n        union2(decoderA, decoderB),\n        decoderC,\n    )\n}\n\nexport function union4<\n    A,\n    B,\n    C,\n    D,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n): Decoder<A | B | C | D> {\n    return union2(\n        union2(decoderA, decoderB),\n        union2(decoderC, decoderD),\n    )\n}\n\nexport function union5<\n    A,\n    B,\n    C,\n    D,\n    E,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n): Decoder<A | B | C | D | E> {\n    return union2(\n        union2(decoderA, decoderB),\n        union3(decoderC, decoderD, decoderE),\n    )\n}\n\nexport function union6<\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n): Decoder<A | B | C | D | E | F> {\n    return union2(\n        union3(decoderA, decoderB, decoderC),\n        union3(decoderD, decoderE, decoderF),\n    )\n}\n\nexport function union7<\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n): Decoder<A | B | C | D | E | F | G> {\n    return union2(\n        union3(decoderA, decoderB, decoderC),\n        union4(decoderD, decoderE, decoderF, decoderG),\n    )\n}\n\nexport function union8<\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    decoderH: Decoder<H>,\n): Decoder<A | B | C | D | E | F | G | H> {\n    return union2(\n        union4(decoderA, decoderB, decoderC, decoderD),\n        union4(decoderE, decoderF, decoderG, decoderH),\n    )\n}\n\nexport function union9<\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    decoderH: Decoder<H>,\n    decoderI: Decoder<I>,\n): Decoder<A | B | C | D | E | F | G | H | I> {\n    return union2(\n        union4(decoderA, decoderB, decoderC, decoderD),\n        union5(decoderE, decoderF, decoderG, decoderH, decoderI),\n    )\n}\n","import * as Maybe from './Maybe'\nimport * as Decoder from './Decoder'\n\nexport type Time =\n    { hours: number, minutes: number }\n\nexport function time(hours: number, minutes: number): Time {\n    return {\n        hours: Math.min(Math.max(0, Math.floor(hours)), 23),\n        minutes: Math.min(Math.max(0, Math.floor(minutes)), 59)\n    }\n}\n\nexport function fromString(input: string): Maybe.Maybe<Time> {\n    const matches = input.match(/(\\d\\d?)[:\\- ]*(\\d\\d?)?/)\n\n    var hours: Maybe.Maybe<number> = Maybe.nothing()\n    var minutes: Maybe.Maybe<number> = Maybe.nothing()\n\n    if (matches !== null) {\n        if (matches[1] !== undefined) {\n            var hours_ = Number(matches[1])\n\n            if (!Number.isNaN(hours_) && hours_ < 24) {\n                hours = Maybe.just(hours_)\n                minutes = Maybe.just(0)\n            }\n        }\n\n        if (matches[2] !== undefined) {\n            var minutes_ = Number(matches[2])\n\n            if (!Number.isNaN(minutes_) && minutes_ < 60) {\n                minutes = Maybe.just(minutes_)\n            }\n        }\n    }\n\n    return Maybe.map2(time, hours, minutes)\n}\n\nexport function compare(a: Time, b: Time): -1 | 0 | 1 {\n    return a.hours < b.hours || (a.hours == b.hours && a.minutes < b.minutes)\n        ? -1\n        : a.hours == b.hours && a.minutes == b.minutes\n        ? 0\n        : 1\n}\n\nfunction pad(n: number): string {\n    return n < 10\n        ? `0${n}`\n        : `${n}`\n}\n\nexport function toString(time: Time): string {\n    return `${pad(time.hours)}:${pad(time.minutes)}`\n}\n\n/** Minutos negativos se convierten en el tiempo 00:00 */\nfunction fromMinutes(minutes: number): Time {\n    return time(minutes / 60, minutes % 60)\n}\n\nfunction toMinutes(time: Time): number {\n    return time.hours * 60 + time.minutes\n}\n\nexport function difference(a: Time, b: Time): Time {\n    return fromMinutes(Math.abs(toMinutes(a) - toMinutes(b)))\n}\n\nexport function add(a: Time, b: Time): Time {\n    return fromMinutes(toMinutes(a) + toMinutes(b))\n}\n\nexport const decoder: Decoder.Decoder<Time> =\n    Decoder.map2(\n        Decoder.property('hours', Decoder.number),\n        Decoder.property('minutes', Decoder.number),\n        time\n    )\n\nexport function fromJavascriptDate(date: globalThis.Date): Time {\n    return time(date.getHours(), date.getMinutes())\n}\n\n/** Devuelve la cantidad de minutos que faltan para que termine el día. */\nexport function minutesBeforeMidnight(time: Time): number {\n    return (23 - time.hours) * 60 + (60 - time.minutes)\n}\n","import * as Utils from './Utils'\r\nimport * as Decoder from './Decoder'\r\n\r\nexport type Date =\r\n    { year: number, month: Month, day: number }\r\n\r\nexport function date(year: number, month: number, day: number): Date {\r\n    return {\r\n        year: Math.min(Math.max(1990, Math.floor(year)), 2100),\r\n        month: monthOf(month),\r\n        day: Math.min(Math.max(1, Math.floor(day)), 31),\r\n    }\r\n}\r\n\r\n/** This is different to how Javascript's Date defines months */\r\nexport type Month = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\r\n\r\nfunction monthOf(number: number): Month {\r\n    return Math.min(Math.max(1, Math.floor(number)), 12) as Month\r\n}\r\n\r\nexport function toJavascriptDate(date: Date): globalThis.Date {\r\n    return new window.Date(date.year, date.month - 1, date.day)\r\n}\r\n\r\nexport function fromJavascriptDate(javascriptDate: globalThis.Date): Date {\r\n    return date(\r\n        javascriptDate.getFullYear(),\r\n        1 + javascriptDate.getMonth(),\r\n        javascriptDate.getDate()\r\n    )\r\n}\r\n\r\nexport function compare(a: Date, b: Date): -1 | 0 | 1 {\r\n    if (a.year < b.year) {\r\n        return -1\r\n    }\r\n    if (a.year === b.year) {\r\n        if (a.month < b.month) {\r\n            return -1\r\n        }\r\n        if (a.month === b.month) {\r\n            return Utils.compareNumbers(a.day, b.day)\r\n        }\r\n        return 1\r\n    }\r\n    return 1\r\n}\r\n\r\nexport const decoder: Decoder.Decoder<Date> =\r\n    Decoder.map3(\r\n        Decoder.property('year', Decoder.number),\r\n        Decoder.property('month', Decoder.number),\r\n        Decoder.property('day', Decoder.number),\r\n        date\r\n    )\r\n\r\nexport const monthDecoder: Decoder.Decoder<Month> =\r\n    Decoder.andThen(\r\n        Decoder.number,\r\n        number =>\r\n            number === 1\r\n                || number === 2\r\n                || number === 3\r\n                || number === 4\r\n                || number === 5\r\n                || number === 6\r\n                || number === 7\r\n                || number === 8\r\n                || number === 9\r\n                || number === 10\r\n                || number === 11\r\n                || number === 12\r\n                ? Decoder.succeed(number)\r\n                : Decoder.fail(`Invalid month '${number}'`)\r\n    )\r\n\r\n// https://weeknumber.net/how-to/javascript\r\n/** Returns the ISO week of the date. */\r\nexport function isoWeek(x: Date): number {\r\n    var date = toJavascriptDate(x)\r\n    // Thursday in current week decides the year.\r\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7)\r\n    // January 4 is always in week 1.\r\n    var week1 = new window.Date(date.getFullYear(), 0, 4)\r\n    // Adjust to Thursday in week 1 and count number of weeks from date to week1.\r\n    return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\r\n        - 3 + (week1.getDay() + 6) % 7) / 7)\r\n}\r\n\r\n\r\nexport function monthToSpanishLabel(month: Month) {\r\n    switch (month) {\r\n        case 1:\r\n            return \"Enero\"\r\n        case 2:\r\n            return \"Febrero\"\r\n        case 3:\r\n            return \"Marzo\"\r\n        case 4:\r\n            return \"Abril\"\r\n        case 5:\r\n            return \"Mayo\"\r\n        case 6:\r\n            return \"Junio\"\r\n        case 7:\r\n            return \"Julio\"\r\n        case 8:\r\n            return \"Agosto\"\r\n        case 9:\r\n            return \"Septiembre\"\r\n        case 10:\r\n            return \"Octubre\"\r\n        case 11:\r\n            return \"Noviembre\"\r\n        case 12:\r\n            return \"Diciembre\"\r\n    }\r\n}\r\n\r\n// --- WEEKDAY\r\n\r\nexport type Weekday =\r\n    | \"Lunes\"\r\n    | \"Martes\"\r\n    | \"Miércoles\"\r\n    | \"Jueves\"\r\n    | \"Viernes\"\r\n    | \"Sábado\"\r\n    | \"Domingo\"\r\n\r\nexport function weekdayToSpanishLabel(weekday: Weekday): string {\r\n    return weekday\r\n}\r\n\r\nexport function getWeekday(date: Date): Weekday {\r\n    switch (toJavascriptDate(date).getDay()) {\r\n        case 0: return \"Domingo\"\r\n        case 1: return \"Lunes\"\r\n        case 2: return \"Martes\"\r\n        case 3: return \"Miércoles\"\r\n        case 4: return \"Jueves\"\r\n        case 5: return \"Viernes\"\r\n        default: return \"Sábado\"\r\n    }\r\n}\r\n\r\n","\r\nimport * as Maybe from './utils/Maybe'\r\nimport * as Utils from './utils/Utils'\r\nimport * as Update from './Update'\r\nimport * as Levenshtein from './utils/Levenshtein'\r\nimport * as Layout from './layout/Layout'\r\nimport * as Input from './layout/Input'\r\nimport * as Html from './vdom/Html'\r\nimport * as Icon from './style/Icon'\r\nimport * as Color from './style/Color'\r\nimport * as Decoder from './utils/Decoder'\r\nimport * as Time from './utils/Time'\r\nimport * as Date from './utils/Date'\r\n\r\nexport type Id = {\r\n    tag: 'recordId',\r\n    id: number,\r\n}\r\n\r\nconst idDecoder: Decoder.Decoder<Id> =\r\n    Decoder.object2(\r\n        'tag', Decoder.literal('recordId'),\r\n        'id', Decoder.number,\r\n    )\r\n\r\nexport function id(id: number): Id {\r\n    return { tag: 'recordId', id }\r\n}\r\n\r\n// RECORD ---\r\n\r\nexport type Record = {\r\n    id: Id,\r\n    description: string,\r\n    task: string,\r\n    startInput: string,\r\n    startTime: Time.Time,\r\n    endInput: string,\r\n    endTime: Time.Time,\r\n    durationInput: string,\r\n    date: Date.Date,\r\n}\r\n\r\nexport const decoder: Decoder.Decoder<Record> =\r\n    Decoder.object9(\r\n        'id', idDecoder,\r\n        'description', Decoder.string,\r\n        'task', Decoder.string,\r\n        'startInput', Decoder.string,\r\n        'startTime', Time.decoder,\r\n        'endInput', Decoder.string,\r\n        'endTime', Time.decoder,\r\n        'durationInput',  Decoder.string,\r\n        'date', Date.decoder\r\n    )\r\n\r\nexport function record(\r\n    id: Id,\r\n    description: string,\r\n    task: string,\r\n    start: Time.Time,\r\n    end: Time.Time,\r\n    date: Date.Date\r\n): Record {\r\n    return {\r\n        id,\r\n        description,\r\n        startInput: Time.toString(start),\r\n        startTime: start,\r\n        endInput: Time.toString(end),\r\n        endTime: end,\r\n        durationInput: Time.toString(Time.difference(start, end)),\r\n        task: task,\r\n        date,\r\n    }\r\n}\r\n\r\nexport function hasId(id: Id, record: Record): boolean {\r\n    return Utils.equals(id, record.id)\r\n}\r\n\r\nexport function getDuration(record: Record): Time.Time {\r\n    return Time.difference(record.startTime, record.endTime)\r\n}\r\n\r\nexport function setDescription(description: string, record: Record): Record {\r\n    return { ...record, description }\r\n}\r\n\r\nexport function setTask(task: string, record: Record): Record {\r\n    return { ...record, task }\r\n}\r\n\r\nexport function setStartInput(startInput: string, record: Record): Record {\r\n    return {\r\n        ...record,\r\n        startInput,\r\n        startTime: Time.fromString(startInput).withDefault(record.startTime)\r\n    }\r\n}\r\n\r\nexport function setEndInput(endInput: string, record: Record): Record {\r\n    return {\r\n        ...record,\r\n        endInput,\r\n        endTime: Time.fromString(endInput).withDefault(record.endTime)\r\n    }\r\n}\r\n\r\nexport function setStartTime(startTime: Time.Time, record: Record): Record {\r\n    return {\r\n        ...record,\r\n        startTime,\r\n        startInput: Time.toString(startTime),\r\n    }\r\n}\r\n\r\nexport function setEndTime(endTime: Time.Time, record: Record): Record {\r\n    return {\r\n        ...record,\r\n        endTime,\r\n        endInput: Time.toString(endTime),\r\n    }\r\n}\r\n\r\nexport function setDurationInput(durationInput: string, record: Record): Record {\r\n    return Maybe.caseOf(\r\n        Time.fromString(durationInput),\r\n        durationTime => setDurationTime(durationTime, record),\r\n        () =>\r\n            ({\r\n                ...record,\r\n                durationInput,\r\n            })\r\n    )\r\n}\r\n\r\nexport function setDurationTime(durationTime: Time.Time, record: Record): Record {\r\n    return setEndTime(\r\n        Time.add(record.startTime, durationTime),\r\n        {\r\n            ...record,\r\n            durationInput: Time.toString(durationTime),\r\n        }\r\n    )\r\n}\r\n\r\nexport function compare(a: Record, b: Record): -1 | 0 | 1 {\r\n    const dateComparison = Date.compare(a.date, b.date)\r\n\r\n    if (dateComparison == 0) {\r\n        return Time.compare(a.startTime, b.startTime)\r\n    }\r\n\r\n    return dateComparison\r\n}\r\n\r\n/** Cleans user input data that isn't in sync with its typed version.\r\n*/\r\nexport function cleanInputs(record: Record): Record {\r\n    return setDurationTime(\r\n        getDuration(record),\r\n        setStartTime(\r\n            record.startTime,\r\n            record\r\n        )\r\n    )\r\n}\r\n\r\nexport function view<E, C>(\r\n    record: Record,\r\n): Layout.Layout<E, C> {\r\n    return Layout.row(\r\n        'div',\r\n        [\r\n            Layout.spacing(17),\r\n        ],\r\n        [\r\n            Input.text(\r\n                [\r\n                    Layout.fillPortion(4),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_description`,\r\n                    label: Layout.column(\r\n                        'div',\r\n                        [Layout.paddingXY(8, 0)],\r\n                        [Layout.text('Descripción')]\r\n                    ),\r\n                    value: record.description,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            Input.text(\r\n                [\r\n                    Layout.fillPortion(2),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_task`,\r\n                    label: Layout.column(\r\n                        'div',\r\n                        [Layout.paddingXY(8, 0)],\r\n                        [Layout.text('Tarea')]\r\n                    ),\r\n                    value: record.task,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            Input.text(\r\n                [\r\n                    Layout.fillPortion(1),\r\n                    Html.style('text-align', 'right'),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_start`,\r\n                    label: Layout.column(\r\n                        'div',\r\n                        [Layout.paddingXY(8, 0)],\r\n                        [Layout.text('Inicio')]\r\n                    ),\r\n                    value: record.startInput,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            Input.text(\r\n                [\r\n                    Layout.fillPortion(1),\r\n                    Html.style('text-align', 'right'),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_end`,\r\n                    label: Layout.column(\r\n                        'div',\r\n                        [Layout.paddingXY(8, 0)],\r\n                        [Layout.text('Fin')]\r\n                    ),\r\n                    value: record.endInput,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            Input.text(\r\n                [\r\n                    Layout.fillPortion(1),\r\n                    Html.style('text-align', 'right'),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_duration`,\r\n                    label: Layout.column(\r\n                        'div',\r\n                        [Layout.paddingXY(8, 0)],\r\n                        [Layout.text('Duración')]\r\n                    ),\r\n                    value: Time.toString(Time.difference(record.endTime, record.startTime)),\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            Layout.column(\r\n                'div',\r\n                [\r\n                    Layout.spacing(8),\r\n                    Html.style('width', '16px'),\r\n                    Layout.startY(),\r\n                ],\r\n                [\r\n                    Icon.button(\r\n                        [],\r\n                        Icon.play()\r\n                    ),\r\n                    Layout.below(\r\n                        'column',\r\n                        'details',\r\n                        [],\r\n                        [\r\n                            Icon.wrapper(\r\n                                'summary',\r\n                                [],\r\n                                Icon.options()\r\n                            )\r\n                        ],\r\n                        {\r\n                            flexDirection: 'column',\r\n                            tagName: 'div',\r\n                            attributes: [ Html.style('right', '0') ],\r\n                            children: [ Layout.text('Hola') ]\r\n                        }\r\n                    )\r\n                ]\r\n            )\r\n        ]\r\n    )\r\n}\r\n\r\nexport function mapWithId(records: Array<Record>, id: Id, fn: (record: Record) => Record): Array<Record> {\r\n    return records.map(record =>\r\n        hasId(id, record)\r\n            ? fn(record)\r\n            : record\r\n    )\r\n}\r\n\r\nexport function deleteWithId(records: Array<Record>, id: Id): Array<Record> {\r\n    return records.filter(record => !hasId(id, record))\r\n}\r\n\r\nexport function search(query: string, records: Array<Record>): Array<Record> {\r\n    if (query === '')\r\n        return []\r\n    else\r\n        return records.map<[Record, number]>(record =>\r\n            [record, Levenshtein.distance(query.toLowerCase(), record.description.toLowerCase())]\r\n        )\r\n            .sort((a: [Record, number], b: [Record, number]) => {\r\n                const [recordA, distanceA] = a\r\n                const [recordB, distanceB] = b\r\n\r\n                return distanceA - distanceB\r\n            })\r\n            .map(([record, _]) => record)\r\n}\r\n","import * as Maybe from './Maybe'\r\nimport * as Utils from './Utils'\r\n\r\nexport function append<A>(array: Array<A>, element: A): Array<A> {\r\n    return [ ...array, element ]\r\n}\r\n\r\nexport function intersperse<A>(array: Array<A>, element: A): Array<A> {\r\n    return array.reduce(\r\n        (accum, value) => [...accum, element, value],\r\n        Utils.id<Array<A>>([])\r\n    ).slice(1)\r\n}\r\n\r\nexport function mapNotNull<A, B>(array: Array<A>, fn: (a: A) => B | null): Array<B> {\r\n    const newArray: Array<B> = []\r\n    const l = array.length\r\n\r\n    for (let i = 0; i < l; i ++) {\r\n        const x = fn(array[i])\r\n\r\n        if (x !== null) {\r\n            newArray.push(x)\r\n        }\r\n    }\r\n\r\n    return newArray\r\n}\r\n\r\nexport function filterMap<A, B>(array: Array<A>, fn: (a: A) => Maybe.Maybe<B>): Array<B> {\r\n    const newArray: Array<B> = []\r\n    const l = array.length\r\n\r\n    for (let i = 0; i < l; i++) {\r\n        fn(array[i]).map(x => newArray.push(x))\r\n    }\r\n\r\n    return newArray\r\n}\r\n\r\nexport function groupWhile<A>(\r\n    array: Array<A>,\r\n    compare: (a: A, b: A) => boolean\r\n): Array<[A, ...Array<A>]> {\r\n    const length = array.length\r\n\r\n    const newArray: Array<[A, ...Array<A>]> = []\r\n\r\n    let i = 0\r\n\r\n    while (i < length) {\r\n        const group: [A, ...Array<A>] = [array[i]]\r\n        i = i + 1\r\n\r\n        while (i < length && compare(array[i - 1], array[i])) {\r\n            group.push(array[i])\r\n            i = i + 1\r\n        }\r\n\r\n        newArray.push(group)\r\n    }\r\n\r\n    return newArray\r\n}\r\n\r\nexport function map2<A, B, C>(\r\n    as: Array<A>,\r\n    bs: Array<B>,\r\n    fn: (a: A, b: B) => C\r\n): Array<C> {\r\n    const cs = []\r\n    const length = Math.min(as.length, bs.length)\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        cs.push(fn(as[i], bs[i]))\r\n    }\r\n\r\n    return cs\r\n}\r\n\r\nexport function decodeJson<A>(\r\n    json: unknown,\r\n    decodeElement: (json: unknown) => Maybe.Maybe<A>\r\n): Maybe.Maybe<Array<A>> {\r\n    if (json instanceof Array) {\r\n        const decoded = filterMap(json, decodeElement)\r\n\r\n        if (json.length === decoded.length) {\r\n            return Maybe.just(decoded)\r\n        }\r\n    }\r\n    return Maybe.nothing()\r\n}\r\n","\nimport * as Maybe from './Maybe'\nimport * as Utils from './Utils'\nimport * as Array_ from './Array'\n\nexport type NonemptyArray<A> = [A, ...Array<A>]\n\n/** Like `groupWhile` but preserving non-emptyness. */\nexport function groupWhile<A>(\n    array: NonemptyArray<A>,\n    compare: (a: A, b: A) => boolean\n): NonemptyArray<NonemptyArray<A>> {\n    return Array_.groupWhile(array, compare) as NonemptyArray<NonemptyArray<A>>\n}\n\n/** Like `Array.prototype.map` but knowing that the nonempty constraint is preserved. */\nexport function map<A, B>(\n    array: NonemptyArray<A>,\n    mapFn: (a: A) => B\n): NonemptyArray<B> {\n    return array.map(mapFn) as NonemptyArray<B>\n}\n","\nimport * as Date from './utils/Date'\nimport * as Record from './Record'\nimport * as NonemptyArray from './utils/NonemptyArray'\nimport * as Utils from './utils/Utils'\nimport * as Layout from './layout/Layout'\nimport * as Html from './vdom/Html'\nimport * as Color from './style/Color'\n\n// --- TIME GROUP\n\n/** Un TimeGroup es un arreglo de `Record`s de un mismo día, ordenados\n * por su tiempo de inicio.\n*/\nexport type TimeGroup = {\n    kind: \"TimeGroup\",\n    tag: Tag,\n    records: NonemptyArray.NonemptyArray<Record.Record>,\n}\n\nfunction timeGroupOf(\n    records: NonemptyArray.NonemptyArray<Record.Record>,\n    today: Date.Date\n): TimeGroup {\n    return {\n        kind: \"TimeGroup\",\n        tag: fromDate({ today, time: records[0].date }),\n        records,\n    }\n}\n\nexport function fromRecords(\n    records: NonemptyArray.NonemptyArray<Record.Record>,\n    today: Date.Date\n): NonemptyArray.NonemptyArray<TimeGroup> {\n    return NonemptyArray.map(\n        NonemptyArray.groupWhile(\n            records,\n            (a, b) =>\n            Utils.equals(\n                fromDate({ today, time: a.date }),\n                fromDate({ today, time: b.date })\n            ),\n        ),\n        records_ => timeGroupOf(records_, today)\n    )\n}\n\n\n// --- TAG\n\n\nexport type Tag =\n    | { dayTag: \"distantDate\", weekday: Date.Weekday, day: number, month: Date.Month, year: number }\n    | { dayTag: \"thisYearsDate\", weekday: Date.Weekday, day: number, month: Date.Month }\n    | { dayTag: \"earlierThisWeek\", weekday: Date.Weekday }\n    | { dayTag: \"yesterday\" }\n    | { dayTag: \"today\" }\n    | { dayTag: \"tomorrow\" }\n\n\nexport function fromDate(args: { today: Date.Date, time: Date.Date }): Tag {\n    const { today, time } = args\n\n    if (time.year !== today.year) {\n        return {\n            dayTag: \"distantDate\",\n            weekday: Date.getWeekday(time),\n            day: time.day,\n            month: time.month,\n            year: time.year,\n        }\n    } else if (time.month === today.month) {\n        if (time.day === today.day - 1) {\n            return { dayTag: \"yesterday\" }\n        } else if (time.day === today.day) {\n            return { dayTag: \"today\" }\n        } else if (time.day === today.day + 1) {\n            return { dayTag: \"tomorrow\" }\n        } else if (time.day < today.day && Date.isoWeek(time) === Date.isoWeek(today)) {\n            return { dayTag: \"earlierThisWeek\", weekday: Date.getWeekday(time) }\n        } else {\n            return {\n                dayTag: \"thisYearsDate\",\n                weekday: Date.getWeekday(time),\n                day: time.day,\n                month: time.month,\n            }\n        }\n    } else {\n        return {\n            dayTag: \"thisYearsDate\",\n            weekday: Date.getWeekday(time),\n            day: time.day,\n            month: time.month,\n        }\n    }\n}\n\nexport function toSpanishLabel(day: Tag): string {\n    switch (day.dayTag) {\n        case \"distantDate\":\n            return `${Date.weekdayToSpanishLabel(day.weekday)} ${day.day} de `\n                + `${Date.monthToSpanishLabel(day.month)}, ${day.year}`\n        case \"thisYearsDate\":\n            return `${Date.weekdayToSpanishLabel(day.weekday)} ${day.day} de `\n                + `${Date.monthToSpanishLabel(day.month)}`\n        case \"earlierThisWeek\":\n            return Date.weekdayToSpanishLabel(day.weekday)\n        case \"today\":\n            return \"Hoy\"\n        case \"tomorrow\":\n            return \"Mañana\"\n        case \"yesterday\":\n            return \"Ayer\"\n    }\n}\n\n// --- VIEW\n\nexport function view<E, C>(\n    tag: Tag,\n    records: Array<Record.Record>,\n): Layout.Layout<E, C> {\n    return Layout.column(\n        \"div\",\n        [\n            Layout.spacing(30),\n        ],\n        [\n            Layout.column(\n                \"div\",\n                [\n                    Layout.color(Color.accent),\n                    Html.style(\"font-size\", \"12px\"),\n                    Html.style(\"letter-spacing\", \"0.15em\"),\n                    Layout.paddingXY(8, 0),\n                ],\n                [\n                    Layout.inlineText(toSpanishLabel(tag).toUpperCase()),\n                ]\n            ),\n            Layout.column(\n                \"div\",\n                [\n                    Layout.spacing(50),\n                ],\n                records.map(record => Record.view(record))\n            )\n        ]\n    )\n}\n","import * as Maybe from './utils/Maybe'\nimport * as Utils from './utils/Utils'\nimport * as Decoder from './utils/Decoder'\nimport * as Layout from './layout/Layout'\nimport * as Html from './vdom/Html'\nimport * as Date from './utils/Date'\nimport * as TimeGroup from './TimeGroup'\nimport * as Record from './Record'\nimport * as Array_ from './utils/Array'\nimport * as Update from './Update'\nimport * as Task from './utils/Task'\nimport * as Pair from './utils/Pair'\nimport './DateGroup.css'\n\nconst collapsingTransitionSeconds = 0.26\n\ntype Transition =\n    | { tag: 'idle' }\n    | { tag: 'aboutToCollapse', groupTag: Tag, height: number }\n    | { tag: 'collapsing', groupTag: Tag }\n\nfunction transitionDecoder(): Decoder.Decoder<Transition> {\n    return Decoder.union3(\n        Decoder.object(\n            'tag', Decoder.literal('idle')\n        ),\n        Decoder.object3(\n            'tag', Decoder.literal('aboutToCollapse'),\n            'groupTag', groupTagDecoder(),\n            'height', Decoder.number,\n        ),\n        Decoder.object2(\n            'tag', Decoder.literal('collapsing'),\n            'groupTag', groupTagDecoder(),\n        ),\n    )\n}\n\nfunction idle(): Transition {\n    return { tag: 'idle' }\n}\n\nfunction aboutToCollapse(group: Tag, height: number): Transition {\n    return { tag: 'aboutToCollapse', groupTag: group, height }\n}\n\nfunction collapsing(tag: Tag): Transition {\n    return { tag: 'collapsing', groupTag: tag }\n}\n\nfunction startCollapsing(collapsingCollapseTransitionState: Transition): Transition {\n    switch (collapsingCollapseTransitionState.tag) {\n        case 'idle':\n        case 'collapsing':\n            return collapsingCollapseTransitionState\n\n        case 'aboutToCollapse':\n            return collapsing(collapsingCollapseTransitionState.groupTag)\n    }\n}\n\n// --- State\n\n// The state needed to make a transition when a group collapses.\n// It is needed in order to create a DateGroup.ViewConfig.\n\nexport type State = {\n    transition: Transition,\n    collapsedGroups: Array<Tag>,\n}\n\nexport const decoder: Decoder.Decoder<State> =\n    Decoder.object2(\n        'transition', transitionDecoder(),\n        'collapsedGroups', Decoder.array(groupTagDecoder()),\n    )\n\nfunction stateOf(state: State): State {\n    return state\n}\n\nexport function init(): State {\n    return {\n        transition: idle(),\n        collapsedGroups: [],\n    }\n}\n\nexport type Event =\n    | { tag: 'clickedCollapseButton', groupTag: Tag }\n    | { tag: 'gotHeightOfGroupBeingCollapsed', groupTag: Tag, height: number }\n    | { tag: 'startCollapseTransition' }\n    | { tag: 'endCollapseTransition' }\n    | { tag: 'domError' }\n\nfunction eventOf(event: Event): Event {\n    return event\n}\n\nfunction clickedCollapseButton(groupTag: Tag): Event {\n    return { tag: 'clickedCollapseButton', groupTag }\n}\n\nexport function update(state: State, event: Event): Update.Update<State, Event> {\n    switch (event.tag) {\n        case 'domError':\n            // Ignoro\n            return Update.pure(state)\n\n        case 'clickedCollapseButton':\n            if (state.collapsedGroups.some(Utils.eq(event.groupTag))) {\n                return Update.pure({\n                    transition: state.transition,\n                    collapsedGroups: state.collapsedGroups\n                        .filter(group => !Utils.equals(group, event.groupTag)),\n                })\n            }\n\n            return Update.of(\n                state,\n                [\n                    getHeightOfGroup(\n                        event.groupTag,\n                        height =>\n                            eventOf({\n                                tag: 'gotHeightOfGroupBeingCollapsed',\n                                groupTag: event.groupTag,\n                                height\n                            }),\n                            eventOf({ tag: 'domError' })\n                    )\n                ]\n            )\n\n        case 'gotHeightOfGroupBeingCollapsed':\n            return Update.of(\n                stateOf({\n                    collapsedGroups: [...state.collapsedGroups, event.groupTag],\n                    transition: aboutToCollapse(event.groupTag, event.height)\n                }),\n                [\n                    Task.map(\n                        Task.waitMilliseconds(0),\n                        _ => eventOf({ tag: 'startCollapseTransition' })\n                    )\n                ]\n            )\n\n        case 'startCollapseTransition':\n            return Update.of(\n                stateOf({\n                    collapsedGroups: state.collapsedGroups,\n                    transition: startCollapsing(state.transition)\n                }),\n                [\n                    Task.map(\n                        Task.waitMilliseconds(collapsingTransitionSeconds * 1000),\n                        _ => eventOf({ tag: 'endCollapseTransition' })\n                    )\n                ]\n            )\n\n        case 'endCollapseTransition':\n            return Update.pure({\n                collapsedGroups: state.collapsedGroups,\n                transition: idle()\n            })\n    }\n}\n\nfunction getHeightOfGroup<A>(\n    group: Tag,\n    onHeight: (height: number) => A,\n    onError: A\n): Task.Task<A> {\n    return Task.map(\n        Task.getRectOf(toStringId(group)),\n        maybeRect =>\n            maybeRect\n                .map(rect => onHeight(rect.height))\n                .withDefault(onError)\n    )\n}\n\n// --- DATE GROUP\n\nexport type DateGroup = {\n    kind: 'DateGroup',\n    tag: Tag,\n    days: [TimeGroup.TimeGroup, ...TimeGroup.TimeGroup[]]\n}\n\nfunction dateGroupOf(\n    days: [TimeGroup.TimeGroup, ...TimeGroup.TimeGroup[]],\n    today: Date.Date\n): DateGroup {\n    return {\n        kind: 'DateGroup',\n        tag: fromDate({ today, time: days[0].records[0].date }),\n        days,\n    }\n}\n\n/** Toma un arreglo de `Record`, lo ordena, y clasifica sus elementos\n * según su TimeGroup y según su DateGroup.\n*/\nexport function fromRecords(\n    records: Array<Record.Record>,\n    today: Date.Date\n): Array<DateGroup> {\n    return Array_.groupWhile(\n        records\n            .sort(Record.compare)\n            .reverse(),\n        (a, b) => \n            Utils.equals(\n                fromDate({ today, time: a.date }),\n                fromDate({ today, time: b.date })\n            )\n    )\n        .map(recordsInGroup =>\n            dateGroupOf(\n                TimeGroup.fromRecords(recordsInGroup, today),\n                today\n            )\n        )\n}\n\n// --- GROUP TAG\n\n/** A DateGroup.Tag expresses the relationship between today and some other date\n * in a human-comprehensible way:\n * 'This week', 'Last week', '2 weeks ago', 'Last month', and so on.\n */\n export type Tag =\n    | { groupTag: 'year', year: number }\n    | { groupTag: 'lastYear' }\n    | { groupTag: 'month', month: Date.Month }\n    | { groupTag: 'lastMonth' }\n    | { groupTag: 'weeksAgo', x: 2 | 3 | 4 }\n    | { groupTag: 'lastWeek' }\n    | { groupTag: 'thisWeek' }\n    | { groupTag: 'nextWeek' }\n    | { groupTag: 'inTheFuture' }\n\nfunction tagOf(group: Tag): Tag {\n    return group\n}\n\nfunction groupTagDecoder(): Decoder.Decoder<Tag> {\n    return Decoder.union9(\n        Decoder.object2(\n            'groupTag', Decoder.literal('year'),\n            'year', Decoder.number,\n        ),\n        Decoder.object(\n            'groupTag', Decoder.literal('lastYear'),\n        ),\n        Decoder.object2(\n            'groupTag', Decoder.literal('month'),\n            'month', Date.monthDecoder,\n        ),\n        Decoder.object(\n            'groupTag', Decoder.literal('lastMonth'),\n        ),\n        Decoder.object2(\n            'groupTag', Decoder.literal('weeksAgo'),\n            'x', Decoder.andThen(\n                Decoder.number,\n                n => n === 2 || n === 3 || n === 4\n                    ? Decoder.succeed<2 | 3 | 4>(n)\n                    : Decoder.fail<2 | 3 | 4>('Invalid weeks ago')\n            )\n        ),\n        Decoder.object(\n            'groupTag', Decoder.literal('lastWeek'),\n        ),\n        Decoder.object(\n            'groupTag', Decoder.literal('thisWeek'),\n        ),\n        Decoder.object(\n            'groupTag', Decoder.literal('nextWeek'),\n        ),\n        Decoder.object(\n            'groupTag', Decoder.literal('inTheFuture'),\n        ),\n    )\n}\n\nfunction groupTagDecoderOld(): Decoder.Decoder<Tag> {\n    return Decoder.andThen(\n        Decoder.property('groupTag', Decoder.string),\n        groupTag => {\n            switch (groupTag) {\n                case 'inTheFuture':\n                case 'nextWeek':\n                case 'thisWeek':\n                case 'lastWeek':\n                case 'lastYear':\n                case 'lastMonth':\n                    return Decoder.succeed(tagOf({ groupTag }))\n                case 'year':\n                    return Decoder.map(\n                        Decoder.property('year', Decoder.number),\n                        year => tagOf({ groupTag, year })\n                    )\n                case 'month':\n                    return Decoder.map(\n                        Decoder.property('month', Date.monthDecoder),\n                        month => tagOf({ groupTag, month })\n                    )\n                case 'weeksAgo':\n                    return Decoder.andThen(\n                        Decoder.property('x', Decoder.number),\n                        x =>\n                            x === 2 || x === 3 || x === 4\n                                ? Decoder.succeed(tagOf({ groupTag, x }))\n                                : Decoder.fail(`Invalid weeksAgo ${x}`)\n                    )\n                default:\n                    return Decoder.fail(`Unknown group tag '${groupTag}'`)\n            }\n        }\n    )\n}\n\nexport function toSpanishLabel(group: Tag): string {\n    switch (group.groupTag) {\n        case 'inTheFuture':\n            return 'En el futuro'\n        case 'nextWeek':\n            return 'La semana que viene'\n        case 'thisWeek':\n            return 'Esta semana'\n        case 'lastWeek':\n            return 'La semana pasada'\n        case 'weeksAgo':\n            return `Hace ${group.x} semanas`\n        case 'lastMonth':\n            return 'El mes pasado'\n        case 'month':\n            return Date.monthToSpanishLabel(group.month)\n        case 'lastYear':\n            return 'El año pasado'\n        case 'year':\n            return String(group.year)\n        default:\n            const _: never = group\n            return 'Nunca'\n    }\n}\n\nexport function toStringId(group: Tag): string {\n switch (group.groupTag) {\n     case 'inTheFuture':\n         return 'inTheFuture'\n     case 'nextWeek':\n         return 'nextWeek'\n     case 'thisWeek':\n         return 'thisWeek'\n     case 'lastWeek':\n         return 'lastWeek'\n     case 'weeksAgo':\n         return `weeksAgo-${group.x}`\n     case 'lastMonth':\n         return 'lastMonth'\n     case 'month':\n         return `month-${group.month}`\n     case 'lastYear':\n         return 'lastYear'\n     case 'year':\n         return `year-${String(group.year)}`\n     default:\n         const _: never = group\n         return 'never'\n }\n}\n\nexport function fromDate(args: { today: Date.Date, time: Date.Date }): Tag {\n const { today, time } = args\n\n if (time.year > today.year) {\n     return { groupTag: 'inTheFuture' }\n } else if (time.year === today.year) {\n    if (time.month > today.month) {\n        if (Date.isoWeek(time) === Date.isoWeek(today) + 1) {\n            return { groupTag: 'nextWeek' }\n        } else {\n            return { groupTag: 'inTheFuture' }\n        }\n    } else if (time.month === today.month) {\n        if (Date.isoWeek(time) === Date.isoWeek(today) + 1) {\n            return { groupTag: 'nextWeek' }\n        } else if (Date.isoWeek(time) === Date.isoWeek(today)) {\n            return { groupTag: 'thisWeek' }\n        } else if (Date.isoWeek(time) === Date.isoWeek(today) - 1) {\n            return { groupTag: 'lastWeek' }\n        } else {\n            return {\n                groupTag: 'weeksAgo',\n                x: Date.isoWeek(today) - Date.isoWeek(time) as 2 | 3 | 4\n            }\n        }\n    } else if (time.month === today.month - 1) {\n        return { groupTag: 'lastMonth' }\n    } else {\n        return {\n            groupTag: 'month',\n            month: time.month\n        }\n    }\n } else if (time.year === today.year - 1) {\n     return { groupTag: 'lastYear' }\n } else {\n     return { groupTag: 'year', year: time.year }\n }\n}\n\n\n// --- VIEW\n\ntype ViewStatus =\n    | { tag: 'uncollapsed' }\n    | { tag: 'aboutToCollapse', height: number }\n    | { tag: 'collapsing' }\n    | { tag: 'collapsed' }\n\n\nexport function getViewStatus(\n    groupTag: Tag,\n    state: State,\n): ViewStatus {\n    switch (state.transition.tag) {\n        case 'aboutToCollapse':\n            if (Utils.equals(state.transition.groupTag, groupTag)) {\n                return { tag: 'aboutToCollapse', height: state.transition.height }\n            }\n            break\n        case 'collapsing':\n            if (Utils.equals(state.transition.groupTag, groupTag)) {\n                return { tag: 'collapsing' }\n            }\n            break\n        case 'idle':\n            break\n        default:\n            Utils.assertNever(state.transition)\n            break\n    }\n\n    if (state.collapsedGroups.some(Utils.eq(groupTag))) {\n        return { tag: 'collapsed' }\n    }\n\n    return { tag: 'uncollapsed' }\n}\n    \n\nfunction isCollapsed(viewCollapseTransitionState: ViewStatus): boolean {\n    return viewCollapseTransitionState.tag === 'collapsed'\n}\n\nfunction toCssHeight(viewCollapseTransitionState: ViewStatus): string {\n    switch (viewCollapseTransitionState.tag) {\n        case 'uncollapsed':\n        case 'collapsed':\n            return 'auto'\n        case 'aboutToCollapse':\n            return `${viewCollapseTransitionState.height}px`\n        case 'collapsing':\n            return `0px`\n    }\n}\n\nfunction toOpacity(viewCollapseTransitionState: ViewStatus): number {\n    switch (viewCollapseTransitionState.tag) {\n        case 'collapsed':\n        case 'collapsing':\n            return 0\n        case 'uncollapsed':\n        case 'aboutToCollapse':\n            return 1\n    }\n}\n    \nexport const collapseTransitionDuration: number = 0.24\n\nexport function view<Context extends { today: Date.Date }>(\n    groupTag: Tag,\n    records: Array<Record.Record>,\n    state: State,\n): Layout.Layout<Event, Context> {\n    const viewStatus = getViewStatus(groupTag, state)\n\n    return Layout.usingContext(({ today }) =>\n        Layout.column(\n            'div',\n            [\n                Layout.spacing(30),\n                Layout.fullWidth()\n            ],\n            [\n                Layout.row(\n                    'button',\n                    [\n                        Layout.spacing(10),\n                        Layout.fullWidth(),\n                        Html.class_('date-group-collapse-button'),\n                        Html.style('padding', '5px'),\n                        Html.style('margin', '-5px'),\n                        Html.on('click', () => clickedCollapseButton(groupTag)),\n                        Html.attribute('aria-controls', toStringId(groupTag)),\n                    ],\n                    [\n                        Layout.inlineText(toSpanishLabel(groupTag).toUpperCase()),\n                    ]\n                ),\n                Layout.column(\n                    'div',\n                    [\n                        Layout.spacing(30),\n                        Layout.fullWidth(),\n                        Html.property('id', toStringId(groupTag)),\n                        Html.style(\n                            'overflow',\n                            viewStatus.tag === 'uncollapsed'\n                                ? 'visible'\n                                : 'hidden'\n                        ),\n                        Html.style(\n                            'transition',\n                            `height ${collapseTransitionDuration}s ease-out, opacity ${collapseTransitionDuration}s linear`\n                        ),\n                        Html.style('height', toCssHeight(viewStatus)),\n                        Html.style('opacity', `${toOpacity(viewStatus)}`),\n                        Html.attribute('aria-expanded', String(!isCollapsed(viewStatus))),\n                    ],\n                    isCollapsed(viewStatus)\n                        ? []\n                        : Array_.groupWhile(\n                            records,\n                            (a, b) =>\n                                Utils.equals(\n                                    fromDate({ today, time: a.date }),\n                                    fromDate({ today, time: b.date })\n                                )\n                        )\n                            .map(day => \n                                TimeGroup.view(TimeGroup.fromDate({ today, time: day[0].date }), day)\n                            )\n                )\n            ]\n        )\n    )\n}\n","import * as Record from './Record'\r\nimport * as Update from './Update'\r\n\r\n\r\nimport * as Date from './utils/Date'\r\nimport * as Time from './utils/Time'\r\nimport * as Utils from './utils/Utils'\r\nimport * as Array_ from './utils/Array'\r\nimport * as Maybe from './utils/Maybe'\r\n\r\n\r\nimport * as Layout from './layout/Layout'\r\n\r\nimport * as Html from './vdom/Html'\r\n\r\nimport * as DateGroup from './DateGroup'\r\nimport * as Decoder from './utils/Decoder'\r\n\r\nexport type Records =\r\n    { tag: 'Records', array: Array<Record.Record> }\r\n\r\nexport const decoder: Decoder.Decoder<Records> =\r\n    Decoder.object2(\r\n        'tag', Decoder.literal('Records'),\r\n        'array', Decoder.array(Record.decoder)\r\n    )\r\n\r\nexport function mockRecords(today: Date.Date): Records {\r\n    return {\r\n        tag: 'Records',\r\n        array: [\r\n            Record.record(\r\n                Record.id(0),\r\n                \"1\",\r\n                \"Time tracker\",\r\n                Time.time(22, 54),\r\n                Time.time(23, 25),\r\n                Date.date(2020, 4, 18),\r\n            ),\r\n            Record.record(\r\n                Record.id(1),\r\n                \"2\",\r\n                \"Study english\",\r\n                Time.time(7, 15),\r\n                Time.time(10, 49),\r\n                Date.date(2021, 4, 22),\r\n            ),\r\n            Record.record(\r\n                Record.id(2),\r\n                \"Login\",\r\n                \"Elm\",\r\n                Time.time(14, 37),\r\n                Time.time(17, 53),\r\n                Date.date(2021, 4, 22),\r\n            ),\r\n            Record.record(\r\n                Record.id(3),\r\n                \"Siempre es hoy!\",\r\n                \"\",\r\n                Time.time(16, 20),\r\n                Time.time(18, 0),\r\n                today\r\n            ),\r\n            Record.record(\r\n                Record.id(4),\r\n                \"Y más tarde\",\r\n                \"\",\r\n                Time.time(18, 20),\r\n                Time.time(20, 0),\r\n                today\r\n            ),\r\n            Record.record(\r\n                Record.id(5),\r\n                \"Ayer\",\r\n                \"\",\r\n                Time.time(16, 20),\r\n                Time.time(18, 0),\r\n                Date.date(today.year, today.month, today.day - 1),\r\n            )\r\n        ]\r\n    }\r\n}\r\n\r\nexport function view<Context extends { today: Date.Date }>(\r\n    records: Array<Record.Record>,\r\n    dateGroupState: DateGroup.State,\r\n): Layout.Layout<DateGroup.Event, Context> {\r\n    return Layout.usingContext(({ today }) =>\r\n        Layout.column(\r\n            \"div\",\r\n            [\r\n                Layout.spacing(50),\r\n                Layout.fullWidth(),\r\n            ],\r\n            records.length > 0\r\n                ? Array_.groupWhile(\r\n                    records\r\n                        .sort(Record.compare)\r\n                        .reverse(),\r\n                    (a, b) =>\r\n                        Utils.equals(\r\n                            DateGroup.fromDate({ today, time: a.date }),\r\n                            DateGroup.fromDate({ today, time: b.date })\r\n                        )\r\n                )\r\n                    .map(groupRecords => {\r\n                        const groupTag = DateGroup.fromDate({ today, time: groupRecords[0].date })\r\n\r\n                        return DateGroup.view(\r\n                            groupTag,\r\n                            groupRecords,\r\n                            dateGroupState\r\n                        )\r\n                    })\r\n                : [Layout.text(\"No hay ninguna entrada todavía\")]\r\n        )\r\n    )\r\n}\r\n","import * as DateGroup from './DateGroup'\n\n/** Actions, messages, or events that our application receives.\n * This covers all of our application input. Each Event is handled explicitly in the\n * main `update` function (index.ts).\n*/\n\nexport type Event =\n    | { eventName: 'none' }\n    | { eventName: 'gotNewDate', date: globalThis.Date }\n    | { eventName: 'dateGroupEvent', event: DateGroup.Event }\n\nexport function none(): Event {\n    return { eventName: 'none' }\n}\n\nexport function gotNewDate(date: globalThis.Date): Event {\n    return { eventName: 'gotNewDate', date }\n}\n\nexport function dateGroupEvent(event: DateGroup.Event): Event {\n    return { eventName: 'dateGroupEvent', event }\n}\n","\nimport * as Update from './Update'\nimport * as Record from './Record'\nimport * as Records from './Records'\n\nimport * as Html from './vdom/Html'\n\nimport * as Layout from './layout/Layout'\n\nimport * as Color from './style/Color'\n\nimport * as Date from './utils/Date'\nimport * as Time from './utils/Time'\n\nimport * as Cmd from './utils/Task'\n\nimport * as Decoder from './utils/Decoder'\n\nimport * as Utils from './utils/Utils'\nimport * as Maybe from './utils/Maybe'\n\nimport * as DateGroup from './DateGroup'\n\nimport * as Event from './Event'\n\n\n// STATE ---\n\n/** The whole state of the application.\n */\nexport type State = {\n    records: Records.Records,\n    today: Date.Date,\n    dateGroupState: DateGroup.State,\n}\n\nexport const decoder: Decoder.Decoder<State> =\n    Decoder.object3(\n        'records', Records.decoder,\n        'today', Date.decoder,\n        'dateGroupState', DateGroup.decoder,\n    )\n\nexport function init(\n    localStorage: string | null,\n    today: Date.Date,\n    now: Time.Time\n): Update.Update<State, Event.Event> {\n    if (localStorage !== null) {\n        try {\n            const decodedStordedState = Decoder.decode(\n                JSON.parse(localStorage),\n                decoder\n            )\n\n            if (decodedStordedState.tag === 'ok') {\n                return Update.of(\n                    { ...decodedStordedState.value, today },\n                    [ waitUntilTomorrow(now) ]\n                )\n            } else {\n                console.info('localStorage decode error', decodedStordedState.error)\n            }\n        } catch (e) {\n            console.info('localStorage parse exception', e)\n        }\n    }\n\n    return Update.of(\n        newInitialState(today),\n        [ waitUntilTomorrow(now) ]\n    )\n}\n\n/** Re-fetch the current date in order to update the `today` in our state. */\nfunction waitUntilTomorrow(now: Time.Time): Cmd.Task<Event.Event> {\n    return Cmd.map(\n        Cmd.waitMilliseconds(Time.minutesBeforeMidnight(now) * 60 * 1000),\n        Event.gotNewDate\n    )\n}\n\nfunction newInitialState(today: Date.Date): State {\n    return {\n        records: Records.mockRecords(today),\n        today,\n        dateGroupState: DateGroup.init(),\n    }\n}\n\n// --- UPDATE\n\nexport function update(state: State, event: Event.Event): Update.Update<State, Event.Event> {\n    switch (event.eventName) {\n        case 'none':\n            return Update.pure(state)\n\n        case 'gotNewDate':\n            return Update.of(\n                { ...state, today: Date.fromJavascriptDate(event.date) },\n                [ waitUntilTomorrow(Time.fromJavascriptDate(event.date)) ]\n            )\n        \n        case 'dateGroupEvent':\n            return Update.andThen(\n                Update.mapBoth(\n                    DateGroup.update(state.dateGroupState, event.event),\n                    dateGroupState => ({ ...state, dateGroupState }),\n                    Event.dateGroupEvent\n                ),\n                saveStateToLocalStorage\n            )\n    }\n}\n\nfunction saveStateToLocalStorage(state: State): Update.Update<State, Event.Event> {\n    return Update.of(state, [ Cmd.saveToLocalStorage('state', state) ])\n}\n\n// --- VIEW\n\nexport function view(state: State): Html.Html<Event.Event> {\n    return Layout.toHtml(\n        { today: state.today },\n        Layout.column(\n            'div',\n            [\n                Layout.centerX(),\n            ],\n            [\n                Html.node(\n                    'style',\n                    [],\n                    [ Html.text(`\nbody {\n    background-color: ${Color.toCssString(Color.background)};\n    border-top: 6px solid ${Color.toCssString(Color.accent)};\n    color: ${Color.toCssString(Color.text)};\n}\n    `)\n                    ],\n                ),\n                Layout.column(\n                    'div',\n                    [\n                        Layout.spacing(50),\n                        Layout.paddingXY(0, 20),\n                        Layout.fullWidth(),\n                        Html.style('max-width', `${1024 + 40}px`),\n                    ],\n                    [\n                        Layout.space(0),\n                        Layout.map(\n                            Records.view(\n                                state.records.array,\n                                state.dateGroupState,\n                            ),\n                            Event.dateGroupEvent\n                        ),\n                        Layout.space(0),\n                    ]\n                )\n            ]\n        )\n    )\n}\n","import * as Html from './Html'\n\nimport * as Utils from '../utils/Utils'\nimport * as Maybe from '../utils/Maybe'\nimport * as Result from '../utils/Result'\nimport * as Array_ from '../utils/Array'\nimport * as Decoder from '../utils/Decoder'\n\nexport function diff<T>(\n    oldVDom: Html.Html<T>,\n    newVDom: Html.Html<T>,\n    dispatch: (event: T) => void,\n): ($node: Element | Text) => Element | Text {\n    if (oldVDom.nodeType === \"text\"\n        || newVDom.nodeType === \"text\"\n        || oldVDom.tagName !== newVDom.tagName\n    ) {\n        return replace(newVDom, dispatch)\n    } else {\n        const patchAttributes = diffAttributes(oldVDom.attributes, newVDom.attributes, dispatch)\n        const patchChildren = diffChildren(oldVDom.children, newVDom.children, dispatch)\n\n        return $node => {\n            patchAttributes($node)\n            patchChildren($node)\n\n            return $node\n        }\n    }\n}\n\nexport function render<Evt>(html: Html.Html<Evt>, dispatch: (evt: Evt) => void): Element | Text {\n    switch (html.nodeType) {\n        case 'node':\n            const element = document.createElement(html.tagName)\n\n            for (let attribute of html.attributes)\n                toDomAttribute(attribute, dispatch, element)\n\n            for (let child of html.children)\n                element.appendChild(render(child, dispatch))\n\n            return element\n\n        case 'text':\n            return document.createTextNode(html.text)\n    }\n}\n\nfunction toDomAttribute<Evt>(attribute: Html.Attribute<Evt>, dispatch: (evt: Evt) => void, $element: Element): void {\n    switch (attribute.tag) {\n        case 'attribute':\n            $element.setAttribute(attribute.name, attribute.value)\n            return\n\n        case 'property':\n            ($element as any)[attribute.name] = attribute.value\n            return\n\n        case 'eventHandler':\n            ($element as any)[`on${attribute.eventName}`] = (event: Event) =>\n                dispatch(attribute.handler(event))\n\n            return\n\n        case 'style':\n            ($element as any).style[attribute.property] = attribute.value\n            return\n\n        case 'class':\n            try {\n                $element.classList.add(attribute.value)\n            } catch (e) {\n                // ¯\\_(ツ)_/¯\n            }\n            return\n    }\n}\n\nfunction replace<T>(\n    newVDom: Html.Html<T>,\n    dispatch: (event: T) => void,\n) {\n    return ($node: Element | Text) => {\n        const $newNode = render(newVDom, dispatch)\n        $node.replaceWith($newNode)\n        return $newNode\n    }\n}\n\n/** A list's indexed map2 but without dropping elements.\n */\nfunction map2Extra<A, B>(\n    xs: Array<A>,\n    ys: Array<A>,\n    bothPresent: (x: A, y: A, index: number) => B,\n    xPresent: (x: A, index: number) => B,\n    yPresent: (y: A, index: number) => B\n): Array<B> {\n    const array: Array<B> = []\n\n    for (let i = 0; i < Math.min(xs.length, ys.length); i++) {\n        array.push(bothPresent(xs[i], ys[i], i))\n    }\n\n    for (let i = ys.length; i < xs.length; i++) {\n        array.push(xPresent(xs[i], i))\n    }\n\n    for (let i = xs.length; i < ys.length; i++) {\n        array.push(yPresent(ys[i], i))\n    }\n\n    return array\n}\n\n// diffAttributes\n\nfunction diffAttributes<T>(\n    oldAttributes: Array<Html.Attribute<T>>,\n    newAttributes: Array<Html.Attribute<T>>,\n    dispatch: (event: T) => void,\n): ($node: Element | Text) => void {\n\n    const patches = map2Extra(\n        oldAttributes,\n        newAttributes,\n        (oldAttr, newAttr, i) => ($node: Element) => {\n            if (!attributeEquality(oldAttr, newAttr)) {\n                removeAttribute(oldAttr, $node)\n                toDomAttribute(newAttr, dispatch, $node)\n            }\n        },\n        (oldAttr, i) => $node => {\n            removeAttribute(oldAttr, $node)\n        },\n        (newAttr, i) => $node => {\n            toDomAttribute(newAttr, dispatch, $node)\n        }\n    )\n\n    return $node => {\n        if ($node instanceof Element)\n            patches.forEach(patch => patch($node))\n    }\n}\n\nfunction attributeEquality<T>(a: Html.Attribute<T>, b: Html.Attribute<T>): boolean {\n    if (a.tag === \"attribute\" && b.tag === \"attribute\") {\n        return a.name === b.name && a.value === b.value\n    } else if (a.tag === \"property\" && b.tag === \"property\") {\n        return a.name === b.name && Utils.equals(a.value, b.value)\n    } else if (a.tag === \"eventHandler\" && b.tag === \"eventHandler\") {\n        // The function comparison will most likely always return false\n        // a smarter implementation could optimize this case somehow.\n        return a.eventName === b.eventName && a.handler === b.handler\n    } else if (a.tag === \"style\" && b.tag === \"style\") {\n        return a.property === b.property && a.value === b.value\n    } else if (a.tag === \"class\" && b.tag === \"class\") {\n        return a.value === b.value\n    }\n\n    return false\n}\n\nfunction removeAttribute<T>(attr: Html.Attribute<T>, $node: Element): void {\n    if ($node instanceof Text) {\n        // Text nodes don't have attributes\n        return\n    }\n\n    try {\n        switch (attr.tag) {\n            case \"attribute\":\n                $node.removeAttribute(attr.name)\n                return\n            case \"property\":\n                ($node as any)[attr.name] = undefined\n                return\n            case \"eventHandler\":\n                ($node as any)[`on${attr.eventName}`] = undefined\n                return\n            case \"style\":\n                ($node as any).style[attr.property] = \"\"\n                return\n            case \"class\":\n                $node.classList.remove(attr.value)\n                return\n        }\n    } catch (e) {\n        // ¯\\_(ツ)_/¯\n        return\n    }\n}\n\n\n// diffChildren\n\nfunction diffChildren<T>(\n    oldChildren: Array<Html.Html<T>>,\n    newChildren: Array<Html.Html<T>>,\n    dispatch: (event: T) => void,\n): ($parent: Element | Text) => void {\n    return $parent => {\n        if ($parent instanceof Element) {\n            /** We need to calculate all the patches and then apply them because we could alter the indexes\n             * when applying some patch.\n             */\n            const patches = getChildrenPatches(oldChildren, newChildren, dispatch, $parent)\n            patches.forEach(patch => patch())\n        }\n    }\n}\n\nfunction getChildrenPatches<T>(\n    oldChildren: Array<Html.Html<T>>,\n    newChildren: Array<Html.Html<T>>,\n    dispatch: (event: T) => void,\n    $parent: Element,\n): Array<() => void> {\n    return map2Extra(\n        oldChildren,\n        newChildren,\n        (oldChild, newChild, i) => {\n            const $child = $parent.childNodes[i]\n\n            return () => {\n                if ($child instanceof Element || $child instanceof Text)\n                    diff(oldChild, newChild, dispatch)($child)\n                else\n                    throw { $parent, oldChild, newChild, $child }\n            }\n        },\n        (oldChild, i) => {\n            const $child = $parent.childNodes[i]\n\n            return () => {\n                $child.remove()\n            }\n        },\n        (newChild, i) => () => {\n            $parent.appendChild(render(newChild, dispatch))\n        }\n    )\n}\n\n","import { Update } from \"./Update\"\nimport { Html } from \"./vdom/Html\"\nimport { diff, render } from \"./vdom/VirtualDom\"\n\nexport function startRuntime<\n    State,\n    Event,\n>(\n    $root: Element,\n    init: Update<State, Event>,\n    view: (state: State) => Html<Event>,\n    update: (state: State, event: Event) => Update<State, Event>,\n) {\n    let currentState = init.state\n    let $rootElement: Element | Text = $root\n\n    requestAnimationFrame(() => {\n        for (const cmd of init.cmds) {\n            cmd.execute(deferedDispatch)\n        }\n    })\n\n    let currentView = view(currentState)\n\n    const dispatch = (event: Event) => {\n        const updateResult = update(currentState, event)\n\n        const updatedView = view(updateResult.state)\n        const patch = diff(currentView, updatedView, dispatch)\n\n        try {\n            patch($rootElement)\n            currentState = updateResult.state\n            currentView = updatedView\n            \n            for (const cmd of updateResult.cmds) {\n                cmd.execute(deferedDispatch)\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    /** All commands are executed sinchronously, but their events are dispatched in the next frame.\n    */\n    function deferedDispatch(event: Event) {\n        requestAnimationFrame(() => dispatch(event))\n    }\n\n    const $initialRender = render(currentView, dispatch)\n    $rootElement.replaceWith($initialRender)\n    $rootElement = $initialRender\n}\n","/** About this code\r\n * \r\n * I'm using The Elm Architecture, which is essentially the same idea as React/Redux.\r\n * \r\n */\r\nimport './index.css'\r\n\r\nimport * as Main from './Main'\r\nimport { startRuntime } from './runtime'\r\n\r\nimport * as Date from './utils/Date'\r\nimport * as Time from './utils/Time'\r\n\r\nlet $rootElement = document.getElementById('root')\r\n\r\nif ($rootElement === null) {\r\n    throw `The runtime didn't start because it couldn't find a <div id=\"root\"> to plug into`\r\n}\r\n\r\nstartRuntime(\r\n    $rootElement,\r\n    Main.init(\r\n        localStorage.getItem('state'),\r\n        Date.fromJavascriptDate(new window.Date()),\r\n        Time.fromJavascriptDate(new window.Date())\r\n    ),\r\n    Main.view,\r\n    Main.update\r\n)\r\n"]}