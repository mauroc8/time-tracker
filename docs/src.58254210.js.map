{"version":3,"sources":["utils/Maybe.ts","utils/Array.ts","utils/Pair.ts","utils/Utils.ts","utils/Levenshtein.ts","utils/vdom/Html.ts","utils/layout/Layout.ts","style/Color.ts","style/Component.ts","style/Icon.ts","utils/Result.ts","utils/decoder/Decoder.ts","utils/Time.ts","utils/Date.ts","Record.ts","CreateRecord.ts","utils/Cmd.ts","State.ts","Update.ts","Records.ts","utils/vdom/VirtualDom.ts","index.ts"],"names":[],"mappings":"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","file":"src.58254210.js","sourceRoot":"../src","sourcesContent":["export interface Maybe<A> {\n    tag: \"just\" | \"nothing\"\n    withDefault: (value: A) => A\n    map: <B>(func: (a: A) => B) => Maybe<B>\n    andThen: <B>(func: (a: A) => Maybe<B>) => Maybe<B>\n    orElse: (_: () => A) => A\n}\n\nexport function just<A>(value: A): Maybe<A> {\n    return new Just<A>(value)\n}\n\nexport function nothing<A>(): Maybe<A> {\n    return new Nothing<A>()\n}\n\nexport function map2<A, B, C>(fn: (a: A, b: B) => C, a: Maybe<A>, b: Maybe<B>): Maybe<C> {\n    return a.andThen(a_ => b.map(b_ => fn(a_, b_)))\n}\n\nexport function map3<A, B, C, D>(\n    fn: (a: A, b: B, c: C) => D,\n    maybeA: Maybe<A>,\n    maybeB: Maybe<B>,\n    maybeC: Maybe<C>,\n): Maybe<D> {\n    return maybeA.andThen(a =>\n        maybeB.andThen(b =>\n            maybeC.map(c => fn(a, b, c))))\n}\n\nexport function fromUndefined<A>(a: A | undefined): Maybe<A> {\n    if (a === undefined)\n        return nothing()\n    else\n        return just(a)\n}\n\nclass Just<A> implements Maybe<A> {\n    public tag: \"just\" = \"just\"\n    value: A\n\n    constructor(value: A) {\n        this.value = value\n    }\n\n    withDefault(_: A): A {\n        return this.value\n    }\n\n    map<B>(func: (a: A) => B): Maybe<B> {\n        return new Just(func(this.value))\n    }\n\n    andThen<B>(func: (a: A) => Maybe<B>): Maybe<B> {\n        return func(this.value)\n    }\n\n    orElse(_: () => A): A {\n        return this.value\n    }\n\n    toBool(): boolean {\n        return true\n    }\n}\n\nclass Nothing<A> implements Maybe<A> {\n    public tag: \"nothing\" = \"nothing\"\n\n    constructor() { }\n\n    withDefault(value: A): A {\n        return value\n    }\n\n    map<B>(_: (a: A) => B): Maybe<B> {\n        return new Nothing()\n    }\n\n    andThen<B>(_: (a: A) => Maybe<B>): Maybe<B> {\n        return new Nothing()\n    }\n\n    orElse(value: () => A): A {\n        return value()\n    }\n\n    toBool(): boolean {\n        return false\n    }\n}\n\nexport function combine<A>(maybes: Array<Maybe<A>>): Maybe<Array<A>> {\n    return maybes.reduce(\n        (maybeArray, maybeItem) =>\n            map2(\n                (array, item) => {\n                    array.push(item)\n                    return array\n                },\n                maybeArray,\n                maybeItem,\n            ),\n        just<Array<A>>([])\n    )\n}\n","import * as Maybe from './Maybe'\r\n\r\nexport function intersperse<A>(array: Array<A>, element: A): Array<A> {\r\n    return array.reduce(\r\n        (accum, value) => [...accum, element, value],\r\n        ([] as Array<A>)\r\n    ).slice(1)\r\n}\r\n\r\nexport function filterMap<A, B>(array: Array<A>, fn: (a: A) => Maybe.Maybe<B>): Array<B> {\r\n    const newArray: Array<B> = []\r\n    const l = array.length\r\n\r\n    for (let i = 0; i < l; i++) {\r\n        fn(array[i])?.map(x => newArray.push(x))\r\n    }\r\n\r\n    return newArray\r\n}\r\n\r\nexport function groupWhile<A>(\r\n    array: Array<A>,\r\n    compare: (a: A, b: A) => boolean\r\n): Array<[A, ...Array<A>]> {\r\n    const length = array.length;\r\n\r\n    if (length === 1) {\r\n        return [[array[0]]];\r\n    } else {\r\n        const newArray: Array<[A, ...Array<A>]> = []\r\n\r\n        let i = 0\r\n\r\n        while (i < length) {\r\n            const group: [A, ...Array<A>] = [array[i]]\r\n            i = i + 1\r\n\r\n            while (i < length && compare(array[i - 1], array[i])) {\r\n                group.push(array[i])\r\n                i = i + 1\r\n            }\r\n\r\n            newArray.push(group)\r\n        }\r\n\r\n        return newArray\r\n    }\r\n}\r\n\r\nexport function map2<A, B, C>(\r\n    as: Array<A>,\r\n    bs: Array<B>,\r\n    fn: (a: A, b: B) => C\r\n): Array<C> {\r\n    const cs = []\r\n    const length = Math.min(as.length, bs.length)\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        cs.push(fn(as[i], bs[i]))\r\n    }\r\n\r\n    return cs\r\n}\r\n\r\nexport function decodeJson<A>(\r\n    json: unknown,\r\n    decodeElement: (json: unknown) => Maybe.Maybe<A>\r\n): Maybe.Maybe<Array<A>> {\r\n    if (json instanceof Array) {\r\n        const decoded = filterMap(json, decodeElement)\r\n\r\n        if (json.length === decoded.length) {\r\n            return Maybe.just(decoded)\r\n        }\r\n    }\r\n    return Maybe.nothing()\r\n}\r\n","\r\nexport function pair<A, B>(a: A, b: B): [A, B] {\r\n    return [a, b]\r\n}\r\n\r\nexport function first<A, B>(pair: [A, B]): A {\r\n    return pair[0]\r\n}\r\n\r\nexport function second<A, B>(pair: [A, B]): B {\r\n    return pair[1]\r\n}\r\n","import * as Maybe from './Maybe'\nimport * as Array_ from './Array'\nimport * as Pair from './Pair'\n\nexport function upperCaseFirst(string: string): string {\n    return string[0].toUpperCase() + string.substring(1)\n}\n\nexport function assertNever(never: never): void {\n    console.warn(`Value of tipe never`, never)\n}\n\n/** Structural equality */\nexport function equals(a: unknown, b: unknown): boolean {\n    if (a instanceof Array && b instanceof Array) {\n        return a.every((x, i) => equals(x, b[i]))\n    }\n\n\n    if (typeof a === \"object\" && typeof b === \"object\") {\n        if (a === null || b === null) {\n            return a === b;\n        } else {\n            const aEntries =\n                Object.entries(a)\n\n            const bEntries =\n                Object.entries(b)\n\n            const sortFunction =\n                (a: [string, any], b: [string, any]) =>\n                    compareStrings(Pair.first(a), Pair.first(b))\n\n            return aEntries.length === bEntries.length\n                && Array_.map2(\n                    aEntries.sort(sortFunction),\n                    bEntries.sort(sortFunction),\n                    ([aKey, aValue], [bKey, bValue]) =>\n                        aKey === bKey && equals(aValue, bValue)\n                )\n                    .every(x => x)\n        }\n    }\n\n    return a === b\n}\n\nexport function compareStrings(a: string, b: string): number {\n    if (a < b)\n        return -1\n    else if (a === b)\n        return 0\n    else\n        return 1\n}\n","\n// --- Memoize the intermediate results (a la dynamic programming) ---\n\ntype Table = {\n    array: Array<number | undefined>,\n    length: number,\n}\n\nfunction table(a: number, b: number): Table {\n    return { array: new Array(a * b), length: a }\n}\n\nfunction get(table: Table, a: number, b: number): number | undefined {\n    return table.array[a * table.length + b]\n}\n\nfunction set(table: Table, a: number, b: number, value: number): void {\n    table.array[a * table.length + b] = value\n}\n\n// --- Levenshtein distance ---\n\n\nfunction tail(a: string): string {\n    return a.substring(1)\n}\n\nexport function distance(a: string, b: string): number {\n    return lev(table(a.length, b.length), a, b)\n}\n\n/** This is the function that matches with the definition at:\n * https://en.wikipedia.org/wiki/Levenshtein_distance#Definition\n */\nfunction lev(table: Table, a: string, b: string,): number {\n    const [a_, b_] = [a.length, b.length]\n\n    if (b_ === 0)\n        return a_\n\n    if (a_ === 0)\n        return b_\n\n    if (a[0] === b[0])\n        return lev_(table, tail(a), tail(b))\n\n    return 1 + Math.min(\n        lev_(table, tail(a), b),\n        lev_(table, a, tail(b)),\n        lev_(table, tail(a), tail(b))\n    )\n}\n\n/** This is the function that memoizes the results in the table\n * to avoid calculating the same result over and over.\n * Mutates the table.\n */\nfunction lev_(table: Table, a: string, b: string,): number {\n    const distance = get(table, a.length, b.length)\n\n    if (distance !== undefined) {\n        return distance\n    } else {\n        const distance_ = lev(table, a, b)\n\n        set(table, a.length, b.length, distance_)\n\n        return distance_\n    }\n}\n","import * as Utils from '../Utils'\n\nexport type Html<Evt> =\n    | { nodeType: \"node\", tagName: string, attributes: Array<Attribute<Evt>>, children: Array<Html<Evt>> }\n    | { nodeType: \"text\", text: string }\n\nexport function node<Evt>(\n    tagName: string,\n    attributes: Array<Attribute<Evt>>,\n    children: Array<Html<Evt>>\n): Html<Evt> {\n    return { nodeType: \"node\", tagName, attributes, children }\n}\n\nexport function text<Evt>(text: string): Html<Evt> {\n    return { nodeType: \"text\", text }\n}\n\nexport function toElement<Evt>(html: Html<Evt>, dispatch: (evt: Evt) => void): Element | Text {\n    switch (html.nodeType) {\n        case \"node\":\n            const element = document.createElement(html.tagName)\n\n            for (let attribute of html.attributes)\n                toDomAttribute(attribute, dispatch, element)\n\n            for (let child of html.children)\n                element.appendChild(toElement(child, dispatch))\n\n            return element\n\n        case \"text\":\n            return document.createTextNode(html.text)\n    }\n}\n\n// Attr\n\nexport type Attribute<Evt> =\n    | { tag: \"attribute\", name: string, value: string }\n    | { tag: \"property\", name: string, value: any }\n    | { tag: \"eventHandler\", eventName: string, handler: (event: any) => Evt }\n    | { tag: \"style\", property: string, value: string }\n    | { tag: \"class\", value: string }\n\nexport function attribute<Evt>(name: string, value: string): Attribute<Evt> {\n    return { tag: \"attribute\", name, value }\n}\n\nexport function property<Evt>(name: string, value: any): Attribute<Evt> {\n    return { tag: \"property\", name, value }\n}\n\nexport function on<Evt>(eventName: string, handler: (event: any) => Evt): Attribute<Evt> {\n    return { tag: \"eventHandler\", eventName, handler }\n}\n\nexport function style<Evt>(property: string, value: string): Attribute<Evt> {\n    return { tag: \"style\", property, value }\n}\n\nexport function class_<A>(className: string): Attribute<A> {\n    return { tag: \"class\", value: className }\n}\n\nexport function toDomAttribute<Evt>(attribute: Attribute<Evt>, dispatch: (evt: Evt) => void, $element: Element): void {\n    switch (attribute.tag) {\n        case \"attribute\":\n            $element.setAttribute(attribute.name, attribute.value)\n            return\n\n        case \"property\":\n            ($element as any)[attribute.name] = attribute.value\n            return\n\n        case \"eventHandler\":\n            ($element as any)[`on${attribute.eventName}`] = (event: any) =>\n                dispatch(attribute.handler(event))\n\n            return\n\n        case \"style\":\n            ($element as any).style[attribute.property] = attribute.value\n            return\n\n        case \"class\":\n            ($element as any).className = (`${($element as any).className} ${attribute.value}`).trim()\n            return\n    }\n}\n\nexport function padding<A>(x: number): Attribute<A> {\n    return style(\"padding\", `${x}px`)\n}\n\nexport function paddingXY<A>(x: number, y: number): Attribute<A> {\n    return style(\"padding\", `${y}px ${x}px`)\n}\n\nexport function addAttributes<A>(attrs: Array<Attribute<A>>, html: Html<A>): Html<A> {\n    if (html.nodeType === \"node\") {\n        return {\n            ...html,\n            attributes: [ ...html.attributes, ...attrs ]\n        }\n    }\n    return html\n}\n","import * as Html from \"../vdom/Html\";\r\n\r\nexport type Layout<A> = {\r\n    html: Html.Html<A>,\r\n    css: { [selector: string]: string }\r\n}\r\n\r\nexport function fromHtml<A>(html: Html.Html<A>, css: { [selector: string]: string }): Layout<A> {\r\n    return { html, css }\r\n}\r\n\r\nexport function toHtml<A>(\r\n    htmlTag: string,\r\n    attributes: Array<Html.Attribute<A>>,\r\n    layout: Layout<A>\r\n): Html.Html<A> {\r\n    return Html.node(\r\n        htmlTag,\r\n        attributes,\r\n        [\r\n            Html.node(\"style\", [], [Html.text(cssToString(layout.css))]),\r\n            layout.html\r\n        ]\r\n    )\r\n}\r\n\r\nfunction cssToString(css: { [selector: string]: string }): string {\r\n    return Object.entries(css).reduce(\r\n        (accumulated, [selector, css]) => `${accumulated}\\n${selector} { ${css} }`,\r\n        \"\"\r\n    )\r\n}\r\n\r\nexport function node<A>(\r\n    htmlTag: string,\r\n    attributes: Array<Html.Attribute<A>>,\r\n    children: Array<Layout<A>>,\r\n): Layout<A> {\r\n    return fromHtml(\r\n        Html.node(htmlTag, attributes, children.map(({ html }) => html)),\r\n        children.reduce(\r\n            (css, layout) => ({ ...css, ...layout.css }),\r\n            {}\r\n        )\r\n    )\r\n}\r\n\r\nexport function column<A>(\r\n    htmlTag: string,\r\n    attributes: Array<Html.Attribute<A>>,\r\n    children: Array<Layout<A>>,\r\n): Layout<A> {\r\n    return fromHtml(\r\n        Html.node(\r\n            htmlTag,\r\n            [ ...attributes, Html.class_(\"flex flex-column\")],\r\n            children.map(({ html }) => html)\r\n        ),\r\n        children.reduce(\r\n            (css, layout) => ({ ...css, ...layout.css }),\r\n            {\r\n                \".flex\": \"display: flex\",\r\n                \".flex-column\": \"flex-direction: column\",\r\n            }\r\n        )\r\n    )\r\n}\r\n\r\nexport function columnWithSpacing<A>(\r\n    spacing: number,\r\n    htmlTag: string,\r\n    attributes: Array<Html.Attribute<A>>,\r\n    children: Array<Layout<A>>,\r\n): Layout<A> {\r\n    return withSpacingY(spacing, column(htmlTag, attributes, children))\r\n}\r\n\r\nexport function rowWithSpacing<A>(\r\n    spacing: number,\r\n    htmlTag: string,\r\n    attributes: Array<Html.Attribute<A>>,\r\n    children: Array<Layout<A>>,\r\n): Layout<A> {\r\n    return withSpacingX(spacing, row(htmlTag, attributes, children))\r\n}\r\n\r\nexport function row<A>(\r\n    htmlTag: string,\r\n    attributes: Array<Html.Attribute<A>>,\r\n    children: Array<Layout<A>>,\r\n): Layout<A> {\r\n    return fromHtml(\r\n        Html.node(\r\n            htmlTag,\r\n            [...attributes, Html.class_(\"flex flex-row\")],\r\n            children.map(({ html }) => html)\r\n        ),\r\n        children.reduce(\r\n            (css, layout) => ({ ...css, ...layout.css }),\r\n            {\r\n                \".flex\": \"display: flex\",\r\n                \".flex-row\": \"flex-direction: row\"\r\n            }\r\n        )\r\n    )\r\n}\r\n\r\nexport function text<A>(text: string): Layout<A> {\r\n    return fromHtml(Html.text(text), {})\r\n}\r\n\r\nexport function space<A>(size: number): Layout<A> {\r\n    return fromHtml(\r\n        Html.node(\r\n            \"div\",\r\n            [\r\n                Html.style(\"width\", size + \"px\"),\r\n                Html.style(\"height\", size + \"px\"),\r\n            ],\r\n            []\r\n        ),\r\n        {}\r\n    )\r\n}\r\n\r\nfunction mapHtml<A, B>(\r\n    fun: (a: Html.Html<A>) => Html.Html<B>,\r\n    layout: Layout<A>\r\n): Layout<B> {\r\n    return fromHtml(\r\n        fun(layout.html),\r\n        layout.css\r\n    )\r\n}\r\n\r\nexport function withCss<A>(css: { [selector: string]: string }, layout: Layout<A>): Layout<A> {\r\n    return fromHtml(\r\n        layout.html,\r\n        { ...layout.css, ...css }\r\n    )\r\n}\r\n\r\nexport function withSpacingY<A>(spacing: number, layout: Layout<A>): Layout<A> {\r\n    return withCss(\r\n        {\r\n            [`.spacing-y-${spacing} > *`]: `margin-top: ${spacing}px`,\r\n            [`.spacing-y-${spacing} > *:first-child`]: `margin-top: 0`\r\n        },\r\n        mapHtml(\r\n            (html =>\r\n                Html.addAttributes(\r\n                    [Html.class_(`spacing-y-${spacing}`)],\r\n                    html\r\n                )\r\n            ),\r\n            layout\r\n        )\r\n    )\r\n}\r\n\r\nexport function withSpacingX<A>(spacing: number, layout: Layout<A>): Layout<A> {\r\n    return withCss(\r\n        {\r\n            [`.spacing-x-${spacing} > *`]: `margin-left: ${spacing}px`,\r\n            [`.spacing-x-${spacing} > *:first-child`]: `margin-left: 0`\r\n        },\r\n        mapHtml(\r\n            (html =>\r\n                Html.addAttributes(\r\n                    [Html.class_(`spacing-x-${spacing}`)],\r\n                    html\r\n                )\r\n            ),\r\n            layout\r\n        )\r\n    )\r\n}\r\n","import * as Maybe from '../utils/Maybe'\r\n\r\nexport type Color =\r\n    | Rgba\r\n    | Hex\r\n\r\n/** RGBA, each channel in [0, 1] */\r\ntype Rgba = {\r\n    tag: \"Rgba\",\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n    a: number\r\n}\r\n\r\nexport function rgba(r: number, g: number, b: number, a: number): Color {\r\n    return { tag: \"Rgba\", r, g, b, a }\r\n}\r\n\r\nexport function rgba255(r: number, g: number, b: number, a: number): Color {\r\n    return { tag: \"Rgba\", r: r / 255, g: g / 255, b: b / 255, a }\r\n}\r\n\r\nexport function withAlpha(rgba: Rgba, a: number): Color {\r\n    return { ...rgba, a }\r\n}\r\n\r\ntype Hex = {\r\n    tag: \"Hex\", hex: string\r\n}\r\n\r\nexport function hex(hex: string): Color {\r\n    return { tag: \"Hex\", hex }\r\n}\r\n\r\ntype Hsl = {\r\n    tag: \"Hsl\",\r\n    h: number,\r\n    s: number,\r\n    l: number,\r\n}\r\n\r\nexport function toCssString(color: Color): string {\r\n    switch (color.tag) {\r\n        case \"Rgba\":\r\n            return `rgba(${Math.floor(color.r * 255)}, ${Math.floor(color.g * 255)}, ${Math.floor(color.b * 255)}, ${color.a})`\r\n        case \"Hex\":\r\n            return `#${color.hex}`\r\n    }\r\n}\r\n\r\n\r\nexport function decode(json: any): Maybe.Maybe<Color> {\r\n    if (typeof json === \"object\"\r\n        && typeof json.r === \"number\"\r\n        && typeof json.g === \"number\"\r\n        && typeof json.b === \"number\"\r\n        && typeof json.a === \"number\"\r\n    )\r\n        return Maybe.just(rgba(json.r, json.g, json.b, json.a))\r\n\r\n    if (typeof json === \"object\"\r\n        && typeof json.hex === \"string\"\r\n    )\r\n        return Maybe.just(hex(json.hex))\r\n\r\n    return Maybe.nothing()\r\n}\r\n\r\n\r\n/** Application colors\r\n * \r\n */\r\n\r\nexport const black = hex('000000')\r\nexport const gray50 = hex('0C0C0C')\r\nexport const gray100 = hex('141414')\r\nexport const gray200 = hex('222222')\r\nexport const gray400 = hex('757575')\r\nexport const gray500 = hex('929292')\r\nexport const gray600 = hex('A1A1A1')\r\nexport const gray700 = hex('B1B1B1')\r\nexport const white = hex('FFFFFF')\r\n\r\nexport const violet = hex('7F8BF8')\r\n\r\nexport const background = gray100\r\nexport const accent = violet\r\n","import * as Html from '../utils/vdom/Html'\r\nimport * as Layout from '../utils/layout/Layout'\r\nimport * as Color from './Color'\r\n\r\nconst textInputCss = {\r\n    \"label\": `\r\n        color: ${Color.toCssString(Color.gray500)};\r\n        font-size: 14px;\r\n        letter-spacing: 0.08em;\r\n        font-weight: 500;\r\n    `,\r\n    \"input\": `\r\n        background-color: ${Color.toCssString(Color.gray50)};\r\n        color: ${Color.toCssString(Color.white)};\r\n        font-size: 14px;\r\n        letter-spacing: 0.04em;\r\n        font-weight: 300;\r\n        line-height: 38px;\r\n        padding-left: 8px;\r\n        padding-right: 8px;\r\n    `,\r\n    \"input:focus\": `\r\n        background-color: ${Color.toCssString(Color.black)};\r\n    `\r\n}\r\n\r\nexport function textInput<A>(\r\n    attributes: Array<Html.Attribute<A>>,\r\n    args: {\r\n        id: string,\r\n        label: Layout.Layout<A>,\r\n        value: string,\r\n        attributes: Array<Html.Attribute<A>>,\r\n    }\r\n): Layout.Layout<A> {\r\n    return Layout.withCss(\r\n        textInputCss,\r\n        Layout.columnWithSpacing(\r\n            14,\r\n            \"label\",\r\n            [\r\n                Html.attribute(\"for\", args.id),\r\n                Html.style(\"width\", \"100%\"),\r\n                Html.style(\"height\", \"100%\"),\r\n                ...attributes,\r\n            ],\r\n            [\r\n                args.label,\r\n                Layout.column(\r\n                    \"input\",\r\n                    [\r\n                        Html.attribute(\"id\", args.id),\r\n                        Html.attribute(\"value\", args.value),\r\n                        Html.style(\"width\", \"100%\"),\r\n                        Html.style(\"height\", \"100%\"),\r\n                        Html.style(\"border-radius\", \"5px\"),\r\n                        ...args.attributes,\r\n                    ],\r\n                    []\r\n                )\r\n            ]\r\n        )\r\n    )\r\n}\r\n\r\nexport function button<A>(\r\n    attributes: Array<Html.Attribute<A>>,\r\n    args: {\r\n        onClick: (event: any) => A,\r\n        label: Layout.Layout<A>,\r\n    }\r\n): Layout.Layout<A> {\r\n    return Layout.column(\r\n        \"button\",\r\n        [\r\n            Html.on(\"click\", args.onClick),\r\n            ...attributes\r\n        ],\r\n        [args.label]\r\n    )\r\n}\r\n","import * as Color from './Color'\r\n\r\nimport * as Html from '../utils/vdom/Html'\r\n\r\nimport * as Layout from '../utils/layout/Layout'\r\n\r\n\r\nexport function button<A>(attributes: Array<Html.Attribute<A>>, icon: Html.Html<never>): Layout.Layout<A> {\r\n    return Layout.column(\r\n        \"button\",\r\n        [\r\n            Html.style(\"width\", \"16px\"),\r\n            Html.style(\"height\", \"16px\"),\r\n            Html.style(\"border-radius\", \"50%\"),\r\n            Html.style(\"align-items\", \"center\"),\r\n            Html.style(\"justify-content\", \"center\"),\r\n            Html.style(\"background-color\", Color.toCssString(Color.gray100)),\r\n            ...attributes\r\n        ],\r\n        [\r\n            Layout.fromHtml(icon, {})\r\n        ]\r\n    )\r\n}\r\n\r\nexport function play<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"media-play.svg\"),\r\n            Html.attribute(\"width\", \"8\"),\r\n            Html.attribute(\"height\", \"8\"),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function delete_<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"trash.svg\"),\r\n            Html.attribute(\"width\", \"8\"),\r\n            Html.attribute(\"height\", \"8\"),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function options<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"ellipses.svg\"),\r\n            Html.attribute(\"width\", \"8\"),\r\n            Html.attribute(\"height\", \"8\"),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function chevronUp<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"chevron-top.svg\"),\r\n            Html.attribute(\"width\", \"8\"),\r\n            Html.attribute(\"height\", \"8\"),\r\n        ],\r\n        []\r\n    )\r\n}\r\n\r\nexport function chevronDown<A>(): Html.Html<A> {\r\n    return Html.node(\r\n        \"img\",\r\n        [\r\n            Html.attribute(\"src\", \"chevron-bottom.svg\"),\r\n            Html.attribute(\"width\", \"8\"),\r\n            Html.attribute(\"height\", \"8\"),\r\n        ],\r\n        []\r\n    )\r\n}\r\n","import * as Maybe from './Maybe'\n\ntype ResultInterface<A, E> = {\n    map: <B>(fn: (a: A) => B) => Result<B, E>,\n    andThen: <B>(fn: (a: A) => Result<B, E>) => Result<B, E>,\n    mapError: <F>(fn: (e: E) => F) => Result<A, F>,\n    withDefault: (default_: A) => A,\n    match: <B>(mapValue: (a: A) => B, mapError: (e: E) => B) => B,\n}\n\nexport type Result<A, E> =\n    | { tag: 'ok'; value: A } & ResultInterface<A, E>\n    | { tag: 'error'; error: E } & ResultInterface<A, E>\n\nexport function ok<A, E>(value: A): Result<A, E> {\n    return {\n        tag: 'ok',\n        value,\n        map: fn => ok(fn(value)),\n        andThen: fn => fn(value),\n        mapError: _ => ok(value),\n        withDefault: _ => value,\n        match: (fn, _) => fn(value),\n    }\n}\n\nexport function error<A, E>(err: E): Result<A, E> {\n    return {\n        tag: 'error',\n        error: err,\n        map: _ => error(err),\n        andThen: _ => error(err),\n        mapError: fn => error(fn(err)),\n        withDefault: default_ => default_,\n        match: (_, fn) => fn(err),\n    }\n}\n\nexport function map2<A, B, C, E>(\n    resultA: Result<A, E>,\n    resultB: Result<B, E>,\n    fn: (a: A, b: B) => C\n): Result<C, E> {\n    return resultA.andThen(a =>\n        resultB.map(b => fn(a, b))\n    )\n}\n\nexport function andMap<A, B, E>(\n    wrappedFunction: Result<(a: A) => B, E>,\n    wrappedValue: Result<A, E>,\n): Result<B, E> {\n    if (wrappedFunction.tag === 'ok') {\n        return wrappedValue.tag === 'ok'\n            ? ok(wrappedFunction.value(wrappedValue.value))\n            : error(wrappedValue.error)\n    }\n    return error(wrappedFunction.error)\n}\n\nexport function toMaybe<A, E>(result: Result<A, E>): Maybe.Maybe<A> {\n    return result.tag === 'ok' ? Maybe.just(result.value) : Maybe.nothing()\n}\n\nexport function fromMaybe<A, E>(err: E, maybe: Maybe.Maybe<A>): Result<A, E> {\n    return maybe\n        .map(a => ok<A, E>(a))\n        .withDefault(error(err))\n}\n\nexport function collect<A, E>(array: Array<Result<A, E>>): Result<Array<A>, E> {\n    return array.reduce(\n        (previousValue, currentValue) =>\n            map2(\n                previousValue,\n                currentValue,\n                (array, element) =>\n                    [ ...array, element ]\n            ),\n        ok<Array<A>, E>([])\n    )\n}\n","import * as Result from '../Result'\nimport * as Utils from '../Utils'\nimport * as Maybe from '../Maybe'\nimport * as Array_ from '../Array'\nimport * as Pair from '../Pair'\n\n// https://package.elm-lang.org/packages/elm/json/latest/Json-Decode\n\nexport type Decoder<A> =\n    { tag: 'Decoder', decoder: (a: unknown) => Result.Result<A, Error> }\n\nexport function decode<A>(a: unknown, decoder: Decoder<A>): Result.Result<A, Error> {\n    return decoder.decoder(a)\n}\n\nfunction decoder<A>(decoder: (a: unknown) => Result.Result<A, Error>): Decoder<A> {\n    return { tag: 'Decoder', decoder }\n}\n\nexport const string: Decoder<string> =\n    decoder(\n        (a: unknown) =>\n            typeof a === 'string'\n                ? Result.ok<string, Error>(a)\n                : Result.error<string, Error>({ tag: 'expectingString' })\n    )\n\nexport const boolean: Decoder<boolean> =\n    decoder(\n        (a: unknown) =>\n            typeof a === 'boolean'\n                ? Result.ok<boolean, Error>(a)\n                : Result.error<boolean, Error>({ tag: 'expectingBoolean' })\n    )\n\nexport const number: Decoder<number> =\n    decoder(\n        (a: unknown) =>\n            typeof a === 'number'\n                ? Result.ok<number, Error>(a)\n                : Result.error<number, Error>({ tag: 'expectingNumber' })\n    )\n\nexport function literal<A>(literal: A): Decoder<A> {\n    return decoder(\n        (a: unknown) =>\n            a === literal\n                ? Result.ok<A, Error>(literal)\n                : Result.error<A, Error>({ tag: 'expectingLiteral', literal })\n    )\n}\n\nexport const null_: Decoder<null> =\n    literal<null>(null)\n\nexport function array<A>(elementDecoder: Decoder<A>): Decoder<Array<A>> {\n    return decoder(\n        (as: unknown) =>\n            as instanceof Array\n                ? Result.collect(\n                    as.map(\n                        (a, index) =>\n                            decode(a, elementDecoder)\n                                .mapError<Error>(error => ({ tag: 'atArrayIndex', index, error }))\n                    )\n                  )\n                : Result.error<Array<A>, Error>({ tag: 'expectingArray' })\n    )\n}\n\nexport function property<A>(propertyName: string, propertyDecoder: Decoder<A>): Decoder<A> {\n    return decoder(\n        (a: unknown) =>\n            typeof a === 'object' && a !== null\n                ? decode((a as any)[propertyName], propertyDecoder)\n                    .mapError<Error>(error => ({ tag: 'atObjectProperty', propertyName, error }))\n                : Result.error<A, Error>({ tag: 'expectingObject' })\n    )\n}\n\nexport function index<A>(index: number, elementDecoder: Decoder<A>): Decoder<A> {\n    return decoder(\n        (as: unknown) =>\n            as instanceof Array\n                ? decode(as[index], elementDecoder)\n                    .mapError<Error>(error => ({ tag: 'atArrayIndex', index, error }))\n                : Result.error<A, Error>({ tag: 'expectingArray' })\n    )\n}\n\nexport function oneOf<A>(decoder_: Decoder<A>, ...decoders: Array<Decoder<A>>): Decoder<A> {\n    return decoder(\n        (a: unknown) =>\n            decoders.reduce(\n                (previousResult, currentDecoder) =>\n                    previousResult.match(\n                        a => Result.ok(a),\n                        _ => decode(a, currentDecoder)\n                    ),\n                decode(a, decoder_)\n            )\n    )\n}\n\n\nexport type Error =\n    | { tag: 'expectingString' }\n    | { tag: 'expectingBoolean' }\n    | { tag: 'expectingNumber' }\n    | { tag: 'expectingLiteral', literal: unknown }\n    | { tag: 'expectingArray' }\n    | { tag: 'atArrayIndex', index: number, error: Error }\n    | { tag: 'expectingObject' }\n    | { tag: 'atObjectProperty', propertyName: string, error: Error }\n    | { tag: 'message', message: string }\n\nexport function errorToString(error: Error): string {\n    switch (error.tag) {\n        case 'expectingString':\n            return 'Expecting a string'\n        case 'expectingBoolean':\n            return 'Expecting a boolean'\n        case 'expectingNumber':\n            return 'Expecting a number'\n        case 'expectingLiteral':\n            return `Expecting the literal value '${error.literal}'`\n        case 'expectingArray':\n            return 'Expecting an array'\n        case 'atArrayIndex':\n            return `${errorToString(error.error)} at array index ${error.index}`\n        case 'expectingObject':\n            return 'Expecting an object'\n        case 'atObjectProperty':\n            return `${errorToString(error.error)} at object property '${error.propertyName}'`\n        case 'message':\n            return error.message\n    }\n}\n\nexport function map<A, B>(decoder_: Decoder<A>, mapFunction: (a: A) => B): Decoder<B> {\n    return decoder(\n        (x: unknown) =>\n            decode(x, decoder_)\n                .map(mapFunction)\n    )\n}\n\nexport function map2<A, B, C>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    mapFunction: (a: A, b: B) => C\n): Decoder<C> {\n    return decoder(\n        (x: unknown) =>\n            Result.map2(\n                decode(x, decoderA),\n                decode(x, decoderB),\n                mapFunction\n            )\n    )\n}\n\nexport function andThen<A, B>(decoder_: Decoder<A>, func: (a: A) => Decoder<B>): Decoder<B> {\n    return decoder(\n        (x: unknown) =>\n            decode(x, decoder_).andThen(\n                a => decode(x, func(a))\n            )\n    )\n}\n\n\nexport function map3<A, B, C, D>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    mapFunction: (a: A, b: B, c: C) => D\n): Decoder<D> {\n    return map2(\n        decoderA,\n        map2(\n            decoderB,\n            decoderC,\n            Pair.pair\n        ),\n        (a, [b, c]) => mapFunction(a, b, c)\n    )\n}\n\nexport function map4<A, B, C, D, E>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    mapFunction: (a: A, b: B, c: C, d: D) => E\n): Decoder<E> {\n    return map3(\n        decoderA,\n        decoderB,\n        map2(\n            decoderC,\n            decoderD,\n            Pair.pair\n        ),\n        (a, b, [c, d]) => mapFunction(a, b, c, d)\n    )\n}\n\nexport function map5<A, B, C, D, E, F>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E) => F\n): Decoder<F> {\n    return map4(\n        decoderA,\n        decoderB,\n        decoderC,\n        map2(\n            decoderD,\n            decoderE,\n            Pair.pair\n        ),\n        (a, b, c, [d, e]) => mapFunction(a, b, c, d, e)\n    )\n}\n\nexport function map6<A, B, C, D, E, F, G>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F) => G\n): Decoder<G> {\n    return map5(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        map2(\n            decoderE,\n            decoderF,\n            Pair.pair\n        ),\n        (a, b, c, d, [e, f]) => mapFunction(a, b, c, d, e, f)\n    )\n}\n\nexport function map7<A, B, C, D, E, F, G, H>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F, g: G) => H\n): Decoder<H> {\n    return map6(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        decoderE,\n        map2(\n            decoderF,\n            decoderG,\n            Pair.pair\n        ),\n        (a, b, c, d, e, [f, g]) => mapFunction(a, b, c, d, e, f, g)\n    )\n}\n\nexport function map8<A, B, C, D, E, F, G, H, I>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    decoderH: Decoder<H>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H) => I\n): Decoder<I> {\n    return map7(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        decoderE,\n        decoderF,\n        map2(\n            decoderG,\n            decoderH,\n            Pair.pair\n        ),\n        (a, b, c, d, e, f, [g, h]) => mapFunction(a, b, c, d, e, f, g, h)\n    )\n}\n\nexport function map9<A, B, C, D, E, F, G, H, I, J>(\n    decoderA: Decoder<A>,\n    decoderB: Decoder<B>,\n    decoderC: Decoder<C>,\n    decoderD: Decoder<D>,\n    decoderE: Decoder<E>,\n    decoderF: Decoder<F>,\n    decoderG: Decoder<G>,\n    decoderH: Decoder<H>,\n    decoderI: Decoder<I>,\n    mapFunction: (a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I) => J\n): Decoder<J> {\n    return map8(\n        decoderA,\n        decoderB,\n        decoderC,\n        decoderD,\n        decoderE,\n        decoderF,\n        decoderG,\n        map2(\n            decoderH,\n            decoderI,\n            Pair.pair\n        ),\n        (a, b, c, d, e, f, g, [h, i]) => mapFunction(a, b, c, d, e, f, g, h, i)\n    )\n}\n\nexport function succeed<A>(a: A): Decoder<A> {\n    return decoder((_) => Result.ok(a))\n}\n\nexport function  fail<A>(message: string): Decoder<A> {\n    return decoder((_) => Result.error<A, Error>({ tag: 'message', message }))\n}\n\nexport function maybe<A>(decoder_: Decoder<A>): Decoder<Maybe.Maybe<A>> {\n    return oneOf(\n        map(\n            property('tag', literal('nothing')),\n            _ => Maybe.nothing()\n        ),\n        map2(\n            property('tag', literal('just')),\n            property('value', decoder_),\n            (_, value) => Maybe.just(value)\n        )\n    )\n}\n","import * as Maybe from './Maybe'\nimport * as Decoder from './decoder/Decoder'\n\n\n\nexport type Time =\n    { hours: number, minutes: number }\n\nexport function time(hours: number, minutes: number): Time {\n    return {\n        hours: Math.min(Math.max(0, Math.floor(hours)), 23),\n        minutes: Math.min(Math.max(0, Math.floor(minutes)), 59)\n    }\n}\n\nexport function fromString(input: string): Maybe.Maybe<Time> {\n    const matches = input.match(/(\\d\\d?)[:\\- ]*(\\d\\d?)?/)\n\n    var hours: Maybe.Maybe<number> = Maybe.nothing()\n    var minutes: Maybe.Maybe<number> = Maybe.nothing()\n\n    if (matches !== null) {\n        if (matches[1] !== undefined) {\n            var hours_ = Number(matches[1])\n\n            if (!Number.isNaN(hours_) && hours_ < 24) {\n                hours = Maybe.just(hours_)\n                minutes = Maybe.just(0)\n            }\n        }\n\n        if (matches[2] !== undefined) {\n            var minutes_ = Number(matches[2])\n\n            if (!Number.isNaN(minutes_) && minutes_ < 60) {\n                minutes = Maybe.just(minutes_)\n            }\n        }\n    }\n\n    return Maybe.map2(time, hours, minutes)\n}\n\nexport function compare(a: Time, b: Time): -1 | 0 | 1 {\n    return a.hours < b.hours || (a.hours == b.hours && a.minutes < b.minutes)\n        ? -1\n        : a.hours == b.hours && a.minutes == b.minutes\n        ? 0\n        : 1\n}\n\nfunction pad(n: number): string {\n    return n < 10\n        ? `0${n}`\n        : `${n}`\n}\n\nexport function toString(time: Time): string {\n    return `${pad(time.hours)}:${pad(time.minutes)}`\n}\n\n/** Minutos negativos se convierten en el tiempo 00:00 */\nfunction fromMinutes(minutes: number): Time {\n    return time(minutes / 60, minutes % 60)\n}\n\nfunction toMinutes(time: Time): number {\n    return time.hours * 60 + time.minutes\n}\n\nexport function difference(a: Time, b: Time): Time {\n    return fromMinutes(Math.abs(toMinutes(a) - toMinutes(b)))\n}\n\nexport const decoder: Decoder.Decoder<Time> =\n    Decoder.map2(\n        Decoder.property('hours', Decoder.number),\n        Decoder.property('minutes', Decoder.number),\n        time\n    )\n\nexport function fromJavascriptDate(date: globalThis.Date): Time {\n    return time(date.getHours(), date.getMinutes())\n}\n","import * as Maybe from './Maybe'\r\nimport * as Utils from './Utils'\r\nimport * as Decoder from './decoder/Decoder'\r\n\r\nexport type Date =\r\n    { year: number, month: Month, day: number }\r\n\r\nexport function date(year: number, month: number, day: number): Date {\r\n    return {\r\n        year: Math.min(Math.max(1990, Math.floor(year)), 2100),\r\n        month: monthOf(month),\r\n        day: Math.min(Math.max(1, Math.floor(day)), 31),\r\n    }\r\n}\r\n\r\n/** This is different to how Javascript's Date defines months */\r\ntype Month = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\r\n\r\nfunction monthOf(number: number): Month {\r\n    return Math.min(Math.max(1, Math.floor(number)), 12) as Month\r\n}\r\n\r\nexport function toJavascriptDate(date: Date): globalThis.Date {\r\n    return new window.Date(date.year, date.month - 1, date.day)\r\n}\r\n\r\n// --- GROUP\r\n\r\n/** A group expresses the relationship between today and some other date\r\n * in a human-comprehensible way:\r\n * \"This week\", \"Last week\", (x + \" weeks ago\"), \"Last month\", and so on.\r\n */\r\nexport type Group =\r\n    | { tag: \"year\", year: number }\r\n    | { tag: \"lastYear\" }\r\n    | { tag: \"month\", month: Month }\r\n    | { tag: \"lastMonth\" }\r\n    | { tag: \"weeksAgo\", x: 2 | 3 | 4 }\r\n    | { tag: \"lastWeek\" }\r\n    | { tag: \"thisWeek\" }\r\n    | { tag: \"nextWeek\" }\r\n    | { tag: \"inTheFuture\" }\r\n\r\nexport function groupToSpanishLabel(group: Group): string {\r\n    switch (group.tag) {\r\n        case \"inTheFuture\":\r\n            return \"En el futuro\"\r\n        case \"nextWeek\":\r\n            return \"La semana que viene\"\r\n        case \"thisWeek\":\r\n            return \"Esta semana\"\r\n        case \"lastWeek\":\r\n            return \"La semana pasada\"\r\n        case \"weeksAgo\":\r\n            return `Hace ${group.x} semanas`\r\n        case \"lastMonth\":\r\n            return \"El mes pasado\"\r\n        case \"month\":\r\n            return monthToSpanishLabel(group.month)\r\n        case \"lastYear\":\r\n            return \"El año pasado\"\r\n        case \"year\":\r\n            return String(group.year)\r\n        default:\r\n            const _: never = group\r\n            return \"Nunca\"\r\n    }\r\n}\r\n\r\nfunction monthToSpanishLabel(month: Month) {\r\n    switch (month) {\r\n        case 1:\r\n            return \"Enero\"\r\n        case 2:\r\n            return \"Febrero\"\r\n        case 3:\r\n            return \"Marzo\"\r\n        case 4:\r\n            return \"Abril\"\r\n        case 5:\r\n            return \"Mayo\"\r\n        case 6:\r\n            return \"Junio\"\r\n        case 7:\r\n            return \"Julio\"\r\n        case 8:\r\n            return \"Agosto\"\r\n        case 9:\r\n            return \"Septiembre\"\r\n        case 10:\r\n            return \"Octubre\"\r\n        case 11:\r\n            return \"Noviembre\"\r\n        case 12:\r\n            return \"Diciembre\"\r\n    }\r\n}\r\n\r\nexport function groupOf(args: { today: Date, time: Date }): Group {\r\n    const { today, time } = args\r\n\r\n    if (time.year > today.year) {\r\n        return { tag: \"inTheFuture\" }\r\n    } else if (time.year === today.year) {\r\n        return groupSameYear(today, time)\r\n    } else if (time.year === today.year - 1) {\r\n        return { tag: \"lastYear\" }\r\n    } else {\r\n        return { tag: \"year\", year: time.year }\r\n    }\r\n}\r\n\r\nfunction groupSameYear(today: Date, time: Date): Group {\r\n    if (time.month > today.month) {\r\n        if (isoWeek(time) === isoWeek(today) + 1) {\r\n            return { tag: \"nextWeek\" }\r\n        } else {\r\n            return { tag: \"inTheFuture\" }\r\n        }\r\n    } else if (time.month === today.month) {\r\n        if (isoWeek(time) === isoWeek(today) + 1) {\r\n            return { tag: \"nextWeek\" }\r\n        } else if (isoWeek(time) === isoWeek(today)) {\r\n            return { tag: \"thisWeek\" }\r\n        } else if (isoWeek(time) === isoWeek(today) - 1) {\r\n            return { tag: \"lastWeek\" }\r\n        } else {\r\n            return {\r\n                tag: \"weeksAgo\",\r\n                x: isoWeek(today) - isoWeek(time) as 2 | 3 | 4\r\n            }\r\n        }\r\n    } else if (time.month === today.month - 1) {\r\n        return { tag: \"lastMonth\" }\r\n    } else {\r\n        return {\r\n            tag: \"month\",\r\n            month: time.month\r\n        }\r\n    }\r\n}\r\n\r\n// https://weeknumber.net/how-to/javascript\r\n// Returns the ISO week of the date.\r\nfunction isoWeek(x: Date): number {\r\n    var date = toJavascriptDate(x);\r\n    // Thursday in current week decides the year.\r\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n    // January 4 is always in week 1.\r\n    var week1 = new window.Date(date.getFullYear(), 0, 4);\r\n    // Adjust to Thursday in week 1 and count number of weeks from date to week1.\r\n    return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\r\n        - 3 + (week1.getDay() + 6) % 7) / 7);\r\n}\r\n\r\n\r\n// --- WEEKDAY\r\n\r\n\r\nexport type Weekday =\r\n    | \"Lunes\"\r\n    | \"Martes\"\r\n    | \"Miércoles\"\r\n    | \"Jueves\"\r\n    | \"Viernes\"\r\n    | \"Sábado\"\r\n    | \"Domingo\"\r\n\r\nexport function weekdayToSpanishLabel(weekday: Weekday): string {\r\n    return weekday\r\n}\r\n\r\nfunction weekdayFromDate(date: Date): Weekday {\r\n    switch (toJavascriptDate(date).getDay()) {\r\n        case 0: return \"Domingo\"\r\n        case 1: return \"Lunes\"\r\n        case 2: return \"Martes\"\r\n        case 3: return \"Miércoles\"\r\n        case 4: return \"Jueves\"\r\n        case 5: return \"Viernes\"\r\n        default: return \"Sábado\"\r\n    }\r\n}\r\n\r\n\r\n// --- DAY TAG\r\n\r\n\r\nexport type DayTag =\r\n    | { tag: \"distantDate\", weekday: Weekday, day: number, month: Month, year: number }\r\n    | { tag: \"thisYearsDate\", weekday: Weekday, day: number, month: Month }\r\n    | { tag: \"earlierThisWeek\", weekday: Weekday }\r\n    | { tag: \"yesterday\" }\r\n    | { tag: \"today\" }\r\n    | { tag: \"tomorrow\" }\r\n\r\n\r\nexport function dayTag(args: { today: Date, time: Date }): DayTag {\r\n    const { today, time } = args\r\n\r\n    if (time.year !== today.year) {\r\n        return {\r\n            tag: \"distantDate\",\r\n            weekday: weekdayFromDate(time),\r\n            day: time.day,\r\n            month: time.month,\r\n            year: time.year,\r\n        }\r\n    } else if (time.month === today.month) {\r\n        if (time.day === today.day - 1) {\r\n            return { tag: \"yesterday\" }\r\n        } else if (time.day === today.day) {\r\n            return { tag: \"today\" }\r\n        } else if (time.day === today.day + 1) {\r\n            return { tag: \"tomorrow\" }\r\n        } else if (time.day < today.day && isoWeek(time) === isoWeek(today)) {\r\n            return { tag: \"earlierThisWeek\", weekday: weekdayFromDate(time) }\r\n        } else {\r\n            return {\r\n                tag: \"thisYearsDate\",\r\n                weekday: weekdayFromDate(time),\r\n                day: time.day,\r\n                month: time.month,\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            tag: \"thisYearsDate\",\r\n            weekday: weekdayFromDate(time),\r\n            day: time.day,\r\n            month: time.month,\r\n        }\r\n    }\r\n}\r\n\r\nexport function dayTagToSpanishLabel(day: DayTag): string {\r\n    switch (day.tag) {\r\n        case \"distantDate\":\r\n            return `${weekdayToSpanishLabel(day.weekday)} ${day.day} de `\r\n                + `${monthToSpanishLabel(day.month)}, ${day.year}`\r\n        case \"thisYearsDate\":\r\n            return `${weekdayToSpanishLabel(day.weekday)} ${day.day} de `\r\n                + `${monthToSpanishLabel(day.month)}`\r\n        case \"earlierThisWeek\":\r\n            return weekdayToSpanishLabel(day.weekday)\r\n        case \"today\":\r\n            return \"Hoy\"\r\n        case \"tomorrow\":\r\n            return \"Mañana\"\r\n        case \"yesterday\":\r\n            return \"Ayer\"\r\n    }\r\n}\r\n\r\nexport const decoder: Decoder.Decoder<Date> =\r\n    Decoder.map3(\r\n        Decoder.property('year', Decoder.number),\r\n        Decoder.property('month', Decoder.number),\r\n        Decoder.property('day', Decoder.number),\r\n        date\r\n    )\r\n","\r\nimport * as Maybe from './utils/Maybe'\r\nimport * as Utils from './utils/Utils'\r\nimport * as Update from './Update'\r\nimport * as Levenshtein from './utils/Levenshtein'\r\nimport * as Layout from './utils/layout/Layout'\r\nimport * as Component from './style/Component'\r\nimport * as Html from './utils/vdom/Html'\r\nimport * as Icon from './style/Icon'\r\nimport * as Color from './style/Color'\r\nimport * as Decoder from './utils/decoder/Decoder'\r\nimport * as Time from './utils/Time'\r\nimport * as Date from './utils/Date'\r\n\r\nexport type Id = {\r\n    tag: \"recordId\",\r\n    id: number,\r\n}\r\n\r\nexport function id(id: number): Id {\r\n    return { tag: \"recordId\", id }\r\n}\r\n\r\n// RECORD ---\r\n\r\n\r\nexport type Record = {\r\n    id: Id,\r\n    description: string,\r\n    startInput: string,\r\n    startTime: Time.Time,\r\n    endInput: string,\r\n    endTime: Time.Time,\r\n    taskInput: string,\r\n    date: Date.Date\r\n}\r\n\r\nexport function record(\r\n    id: Id,\r\n    description: string,\r\n    start: Time.Time,\r\n    end: Time.Time,\r\n    taskInput: string,\r\n    date: Date.Date\r\n): Record {\r\n    return {\r\n        id,\r\n        description,\r\n        startInput: Time.toString(start),\r\n        startTime: start,\r\n        endInput: Time.toString(end),\r\n        endTime: end,\r\n        taskInput,\r\n        date,\r\n    }\r\n}\r\n\r\nexport function hasId(id: Id, record: Record): boolean {\r\n    return Utils.equals(id, record.id)\r\n}\r\n\r\nexport function withDescription(description: string, record: Record): Record {\r\n    return { ...record, description }\r\n}\r\n\r\nexport function withTask(taskInput: string, record: Record): Record {\r\n    return { ...record, taskInput }\r\n}\r\n\r\nexport function withStart(startInput: string, record: Record): Record {\r\n    return {\r\n        ...record,\r\n        startInput,\r\n        startTime: Time.fromString(startInput).withDefault(record.startTime)\r\n    }\r\n}\r\n\r\nexport function withEnd(endInput: string, record: Record): Record {\r\n    return {\r\n        ...record,\r\n        endInput,\r\n        endTime: Time.fromString(endInput).withDefault(record.endTime)\r\n    }\r\n}\r\n\r\nexport function compare(a: Record, b: Record): -1 | 0 | 1 {\r\n    return Time.compare(a.startTime, b.startTime)\r\n}\r\n\r\n/** If a date is mispelled or the task is invalid, reset the input value to the last valid value. */\r\nexport function save(record: Record, today: Date.Date): Record {\r\n    return {\r\n        id: record.id,\r\n        description: record.description,\r\n        ...Time.fromString(record.startInput)\r\n            .map(startTime => ({ startTime, startInput: record.startInput }))\r\n            .withDefault({ startTime: record.startTime, startInput: Time.toString(record.startTime) }),\r\n        ...Time.fromString(record.endInput)\r\n            .map(endTime => ({ endTime, endInput: record.endInput }))\r\n            .withDefault({ endTime: record.endTime, endInput: Time.toString(record.endTime) }),\r\n        taskInput: record.taskInput,\r\n        date: today,\r\n    }\r\n}\r\n\r\nexport function view<A>(record: Record): Layout.Layout<A> {\r\n\r\n    const separator = Layout.column<A>(\r\n        'div',\r\n        [\r\n            Html.style(\"flex-basis\", \"2%\"),\r\n        ],\r\n        []\r\n    )\r\n\r\n    return Layout.row(\r\n        \"div\",\r\n        [\r\n            Html.attribute(\"class\", \"record\"),\r\n        ],\r\n        [\r\n            Component.textInput(\r\n                [\r\n                    Html.style(\"flex-basis\", \"40%\"),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_description`,\r\n                    label: Layout.column(\r\n                        \"div\",\r\n                        [Html.paddingXY(8, 0)],\r\n                        [Layout.text('Descripción')]\r\n                    ),\r\n                    value: record.description,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            separator,\r\n            Component.textInput(\r\n                [\r\n                    Html.style(\"flex-basis\", \"20%\"),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_task`,\r\n                    label: Layout.column(\r\n                        \"div\",\r\n                        [Html.paddingXY(8, 0)],\r\n                        [Layout.text('Tarea')]\r\n                    ),\r\n                    value: record.taskInput,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            separator,\r\n            Component.textInput(\r\n                [\r\n                    Html.style(\"flex-basis\", \"10%\"),\r\n                    Html.style(\"text-align\", \"right\"),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_start`,\r\n                    label: Layout.column(\r\n                        \"div\",\r\n                        [Html.paddingXY(8, 0)],\r\n                        [Layout.text('Inicio')]\r\n                    ),\r\n                    value: record.startInput,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            separator,\r\n            Component.textInput(\r\n                [\r\n                    Html.style(\"flex-basis\", \"10%\"),\r\n                    Html.style(\"text-align\", \"right\"),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_end`,\r\n                    label: Layout.column(\r\n                        \"div\",\r\n                        [Html.paddingXY(8, 0)],\r\n                        [Layout.text('Fin')]\r\n                    ),\r\n                    value: record.endInput,\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            separator,\r\n            Component.textInput(\r\n                [\r\n                    Html.style(\"flex-basis\", \"10%\"),\r\n                    Html.style(\"text-align\", \"right\"),\r\n                ],\r\n                {\r\n                    id: `record_${record.id.id}_duration`,\r\n                    label: Layout.column(\r\n                        \"div\",\r\n                        [Html.paddingXY(8, 0)],\r\n                        [Layout.text('Duración')]\r\n                    ),\r\n                    value: Time.toString(Time.difference(record.endTime, record.startTime)),\r\n                    attributes: [],\r\n                }\r\n            ),\r\n            separator,\r\n            Layout.withSpacingY(\r\n                8,\r\n                Layout.column(\r\n                    \"div\",\r\n                    [\r\n                        Html.style(\"width\", \"16px\"),\r\n                        Html.style(\"color\", Color.toCssString(Color.gray500)),\r\n                        Html.style(\"justify-content\", \"flex-start\"),\r\n                    ],\r\n                    [\r\n                        Icon.button(\r\n                            [\r\n                                Html.attribute(\"class\", \"visible-when-record-is-hovered visible-when-focused\"),\r\n                            ],\r\n                            Icon.play()\r\n                        ),\r\n                        Icon.button(\r\n                            [\r\n                                Html.attribute(\"class\", \"visible-when-record-is-hovered visible-when-focused\"),\r\n                            ],\r\n                            Icon.options()\r\n                        ),\r\n                    ]\r\n                )\r\n            )\r\n        ]\r\n    )\r\n}\r\n\r\nexport function mapWithId(records: Array<Record>, id: Id, fn: (record: Record) => Record): Array<Record> {\r\n    return records.map(record =>\r\n        hasId(id, record)\r\n            ? fn(record)\r\n            : record\r\n    )\r\n}\r\n\r\nexport function deleteWithId(records: Array<Record>, id: Id): Array<Record> {\r\n    return records.filter(record => !hasId(id, record))\r\n}\r\n\r\nexport const idDecoder: Decoder.Decoder<Id> =\r\n    Decoder.map2(\r\n        Decoder.property('tag', Decoder.literal('recordId')),\r\n        Decoder.property('id', Decoder.number),\r\n        (_, x) => id(x)\r\n    )\r\n\r\nexport const decoder: Decoder.Decoder<Record> =\r\n    Decoder.map8(\r\n        Decoder.property('id', idDecoder),\r\n        Decoder.property('description', Decoder.string),\r\n        Decoder.property('startInput', Decoder.string),\r\n        Decoder.property('startTime', Time.decoder),\r\n        Decoder.property('endInput', Decoder.string),\r\n        Decoder.property('endTime', Time.decoder),\r\n        Decoder.property('taskInput', Decoder.string),\r\n        Decoder.property('date', Date.decoder),\r\n        (id, description, startInput, startTime, endInput, endTime, taskInput, date) =>\r\n            ({\r\n                id,\r\n                description,\r\n                startInput,\r\n                startTime,\r\n                endInput,\r\n                endTime,\r\n                taskInput,\r\n                date\r\n            })\r\n    )\r\n\r\nexport function search(query: string, records: Array<Record>): Array<Record> {\r\n    if (query === \"\")\r\n        return []\r\n    else\r\n        return records.map<[Record, number]>(record =>\r\n            [record, Levenshtein.distance(query.toLowerCase(), record.description.toLowerCase())]\r\n        )\r\n            .sort((a: [Record, number], b: [Record, number]) => {\r\n                const [recordA, distanceA] = a\r\n                const [recordB, distanceB] = b\r\n\r\n                return distanceA - distanceB\r\n            })\r\n            .map(([record, _]) => record)\r\n}\r\n\r\nexport function recordCss(): string {\r\n    return `\r\n\r\n.visible-when-record-is-hovered,\r\n.visible-when-focused {\r\n    opacity: 0%;\r\n    transition: opacity 0.2s ease-out;\r\n}\r\n\r\n.record:hover .visible-when-record-is-hovered {\r\n    opacity: 100%;\r\n}\r\n\r\n.visible-when-focused:focus,\r\n.visible-when-focused:focus + .visible-when-focused {\r\n    opacity: 100%;\r\n}\r\n\r\n`;\r\n}\r\n","\r\nimport * as Record from './Record'\r\nimport * as Update from './Update'\r\n\r\nimport * as Maybe from './utils/Maybe'\r\nimport * as Result from './utils/Result'\r\nimport * as Date from './utils/Date'\r\nimport * as Time from './utils/Time'\r\n\r\nimport * as Html from './utils/vdom/Html'\r\n\r\nimport * as Decoder from './utils/decoder/Decoder'\r\n\r\nimport * as Layout from './utils/layout/Layout'\r\n\r\nimport * as Component from './style/Component'\r\n\r\n/** State of the 'create record' form.\r\n */\r\nexport type CreateRecord = {\r\n    descriptionInput: string,\r\n    taskInput: string,\r\n    start: Maybe.Maybe<Start>,\r\n}\r\n\r\nexport type Start = {\r\n    input: string,\r\n    time: Time.Time,\r\n    date: Date.Date,\r\n}\r\n\r\nexport function start(time: Time.Time, date: Date.Date): Start {\r\n    return { input: Time.toString(time), time, date }\r\n}\r\n\r\nexport function empty(descriptionInputValue: string): CreateRecord {\r\n    return {\r\n        descriptionInput: descriptionInputValue,\r\n        taskInput: '',\r\n        start: Maybe.nothing(),\r\n    }\r\n}\r\n\r\nexport function withStart(time: Time.Time, date: Date.Date, createRecord: CreateRecord): CreateRecord {\r\n    return {\r\n        ...createRecord,\r\n        start: Maybe.just(start(time, date)),\r\n    }\r\n}\r\n\r\nexport function withTask(taskInputValue: string, createRecord: CreateRecord): CreateRecord {\r\n    return { ...createRecord, taskInput: taskInputValue }\r\n}\r\n\r\nexport function withStartInput(startInputValue: string, createRecord: CreateRecord): CreateRecord {\r\n    return Time.fromString(startInputValue)\r\n        .map(newStartTime =>\r\n            ({\r\n                ...createRecord,\r\n                start: createRecord.start.map(s => start(newStartTime, s.date))\r\n            })\r\n        )\r\n        .withDefault(createRecord)\r\n}\r\n\r\nexport function sanitizeInputs(createRecord: CreateRecord): CreateRecord {\r\n    return {\r\n        ...createRecord,\r\n        start: createRecord.start.map(s => start(s.time, s.date))\r\n    }\r\n}\r\n\r\nexport type Error =\r\n    | { tag: \"emptyDescription\" }\r\n    | { tag: \"emptyTask\" }\r\n    | { tag: \"emptyBoth\" }\r\n\r\nconst emptyDescription: Error = { tag: 'emptyDescription' }\r\nconst emptyTask: Error = { tag: 'emptyTask' }\r\nconst emptyBoth: Error = { tag: 'emptyBoth' }\r\n\r\nfunction hasEmptyDescription(createRecord: CreateRecord): boolean {\r\n    return createRecord.descriptionInput.trim() === ''\r\n}\r\n\r\nfunction hasEmptyTask(createRecord: CreateRecord): boolean {\r\n    return createRecord.taskInput.trim() === ''\r\n}\r\n\r\nfunction getError(createRecord: CreateRecord): Maybe.Maybe<Error> {\r\n    if (\r\n        hasEmptyDescription(createRecord)\r\n            && hasEmptyTask(createRecord)\r\n    ) {\r\n        return Maybe.just(emptyBoth)\r\n    }\r\n\r\n    if (\r\n        hasEmptyDescription(createRecord)\r\n    ) {\r\n        return Maybe.just(emptyDescription)\r\n    }\r\n\r\n    if (\r\n        hasEmptyTask(createRecord)\r\n    ) {\r\n        return Maybe.just(emptyTask)\r\n    }\r\n\r\n    return Maybe.nothing()\r\n}\r\n\r\nexport function toRecord(\r\n    recordId: Record.Id,\r\n    endTime: Time.Time,\r\n    endDate: Date.Date,\r\n    createRecord: CreateRecord,\r\n): Result.Result<Record.Record, Error> {\r\n    return getError(createRecord)\r\n        .map(x => Result.error<Record.Record, Error>(x))\r\n        .withDefault(\r\n            Result.ok<Record.Record, Error>(\r\n                Record.record(\r\n                    recordId,\r\n                    createRecord.descriptionInput,\r\n                    createRecord.start.map(({ time }) => time).withDefault(endTime),\r\n                    endTime,\r\n                    createRecord.taskInput,\r\n                    createRecord.start.map(({ date }) => date).withDefault(endDate)\r\n                )\r\n            )\r\n        )\r\n}\r\n\r\nexport function view<A>(\r\n    attributes: Array<Html.Attribute<A>>,\r\n    args: {\r\n        createRecord: CreateRecord,\r\n        records: Array<Record.Record>,\r\n    }\r\n): Layout.Layout<A> {\r\n\r\n    const redBorder: Html.Attribute<A> =\r\n        Html.style(\"borderColor\", \"red\")\r\n\r\n    return Layout.row<A>(\r\n        \"div\",\r\n        attributes,\r\n        [\r\n            Component.textInput(\r\n                [],\r\n                {\r\n                    id: \"createRecord-description\",\r\n                    label: Layout.text(\"Descripción\"),\r\n                    value: args.createRecord.descriptionInput,\r\n                    attributes: [\r\n                        (() => {\r\n                            if (hasEmptyDescription(args.createRecord)) {\r\n                                return redBorder\r\n                            } else {\r\n                                return Html.class_<A>(\"\")\r\n                            }\r\n                        })(),\r\n                    ],\r\n                }\r\n            ),\r\n            Component.textInput(\r\n                [],\r\n                {\r\n                    id: \"createRecord-task\",\r\n                    label: Layout.text(\"Tarea\"),\r\n                    value: args.createRecord.taskInput,\r\n                    attributes: [\r\n                        (() => {\r\n                            if (hasEmptyTask(args.createRecord)) {\r\n                                return redBorder\r\n                            } else {\r\n                                return Html.class_<A>(\"\")\r\n                            }\r\n                        })()\r\n                    ],\r\n                }\r\n            ),\r\n            ...args.createRecord.start.map<Array<Layout.Layout<A>>>(({ input }) => [\r\n                Component.textInput(\r\n                    [],\r\n                    {\r\n                        id: \"create-record-start-time\",\r\n                        label: Layout.text(\"Start time\"),\r\n                        value: input,\r\n                        attributes: [],\r\n                    }\r\n                ),\r\n                Layout.fromHtml(\r\n                    Html.node(\r\n                        \"button\",\r\n                        [\r\n                            //Html.on(\"click\", (event: any) => Update.clickedButton(Button.stop()))\r\n                        ],\r\n                        [\r\n                            Html.text(\"Parar\"),\r\n                        ]\r\n                    ),\r\n                    {}\r\n                )\r\n            ])\r\n                .withDefault([\r\n                    Layout.fromHtml(\r\n                        Html.node(\r\n                            \"button\",\r\n                            [\r\n                                //Html.on(\"click\", (_) => Update.clickedButton(Button.play()))\r\n                            ],\r\n                            [\r\n                                Html.text(\"Empezar\")\r\n                            ]\r\n                        ),\r\n                        {}\r\n                    )\r\n                ])\r\n        ]\r\n    )\r\n}\r\n\r\nexport const decoder: Decoder.Decoder<CreateRecord> =\r\n    Decoder.map3(\r\n        Decoder.property('descriptionInput', Decoder.string),\r\n        Decoder.property('taskInput', Decoder.string),\r\n        Decoder.property(\r\n            'start',\r\n            Decoder.maybe(\r\n                Decoder.map2(\r\n                    Decoder.property('time', Time.decoder),\r\n                    Decoder.property('date', Date.decoder),\r\n                    start\r\n                )\r\n            )\r\n        ),\r\n        (descriptionInput, taskInput, start) =>\r\n            ({\r\n                descriptionInput,\r\n                taskInput,\r\n                start\r\n            })\r\n    )\r\n\r\nexport function resumeRecord(now: Time.Time, today: Date.Date, record: Record.Record): CreateRecord {\r\n    return {\r\n        descriptionInput: record.description,\r\n        taskInput: record.taskInput,\r\n        start: Maybe.just(start(now, today))\r\n    }\r\n}\r\n","import * as State from '../State'\nimport * as Maybe from './Maybe'\nimport * as Result from './Result'\nimport * as Decoder from './decoder/Decoder'\n\nexport type Func<A, B> = (a: A) => B\n\nexport type Cmd<A> =\n    | { tag: \"Cmd\", execute: Func<Func<A, void>, void> }\n\nfunction of<A>(execute: Func<Func<A, void>, void>): Cmd<A> {\n    return { tag: \"Cmd\", execute }\n}\n\nexport function map<A, B>(cmd: Cmd<A>, f: (a: A) => B): Cmd<B> {\n    return of(\n        (dispatch: Func<B, void>) => {\n            cmd.execute((a: A) => dispatch(f(a)))\n        }\n    )\n}\n\nexport function andThen<A, B>(cmd: Cmd<A>, f: (a: A) => Cmd<B>): Cmd<B> {\n    return of(\n        (dispatch: Func<B, void>) => {\n            cmd.execute((a: A) => {\n                f(a).execute(dispatch)\n            })\n        }\n    )\n}\n\n// Ejecuta secuencialmente.\nexport function map2<A, B, C>(cmd: Cmd<A>, cmdB: Cmd<B>, f: (a: A, b: B) => C): Cmd<C> {\n    return of(\n        (dispatch: Func<C, void>) => {\n            cmd.execute((a: A) => {\n                cmdB.execute((b: B) => {\n                    dispatch(f(a, b))\n                })\n            })\n        }\n    )\n}\n\nexport function none<T>(): Cmd<T> {\n    return of(() => {})\n}\n\nexport function batch<T>(cmds: Array<Cmd<T>>): Cmd<T> {\n    return of(\n        (dispatch) => {\n            for (const cmd of cmds) {\n                cmd.execute(dispatch)\n            }\n        }\n    )\n}\n\nexport function saveToLocalStorage<A>(key: string, value: unknown): Cmd<A> {\n    return of (\n        (_) => {\n            localStorage.setItem(key, JSON.stringify(value))\n        }\n    )\n}\n\nexport function getFromLocalStorage(key: string): Cmd<Maybe.Maybe<string>> {\n    return of(\n        (dispatch) => {\n            const stateString = localStorage.getItem(key)\n\n            if (stateString !== null) {\n                dispatch(Maybe.just(stateString))\n            } else {\n                dispatch(Maybe.nothing())\n            }\n        }\n    )\n}\n\nexport function preventDefault<T>(event: Event): Cmd<T> {\n    return of(\n        (_) => {\n            event.preventDefault()\n        }\n    )\n}\n","import * as Maybe from './utils/Maybe'\nimport * as Utils from './utils/Utils'\nimport * as CreateRecord from './CreateRecord'\nimport * as Record from './Record'\nimport * as Effect from './utils/Cmd'\nimport * as Decoder from './utils/decoder/Decoder'\nimport * as Time from './utils/Time'\nimport * as Date from './utils/Date'\n\n// STATE ---\n\n/** The whole state of the application.\n*/\nexport type State = {\n    createRecord: CreateRecord.CreateRecord,\n    records: Array<Record.Record>,\n    today: Date.Date,\n}\n\nexport function initialState<Event>(flags: string | null, today: Date.Date): [State, Effect.Cmd<Event>] {\n    try {\n        return [\n            Decoder\n                .decode(\n                    flags && JSON.parse(flags),\n                    decoder(today)\n                )\n                .withDefault(initialUnsavedState(today)),\n            Effect.none(),\n        ]\n    } catch (e) {\n        return [initialUnsavedState(today), Effect.none()]\n    }\n}\n\nfunction initialUnsavedState(today: Date.Date): State {\n    return {\n        createRecord: CreateRecord.empty(\"\"),\n        records: [\n            Record.record(\n                Record.id(0),\n                \"Login\",\n                Time.time(22, 54),\n                Time.time(23, 25),\n                \"Inweb\",\n                Date.date(21, 4, 2021),\n            ),\n            Record.record(\n                Record.id(1),\n                \"Login\",\n                Time.time(7, 15),\n                Time.time(10, 49),\n                \"Inweb\",\n                Date.date(22, 4, 2021),\n            ),\n            Record.record(\n                Record.id(2),\n                \"Login\",\n                Time.time(14, 37),\n                Time.time(17, 53),\n                \"Inweb\",\n                Date.date(22, 4, 2021),\n            ),\n        ],\n        today,\n    }\n}\n\nexport function decoder(today: Date.Date): Decoder.Decoder<State> {\n    return Decoder.map2(\n        Decoder.property('records', Decoder.array(Record.decoder)),\n        Decoder.property('createRecord', CreateRecord.decoder),\n        (records, createRecord) =>\n            ({\n                records,\n                createRecord,\n                today,\n            })\n    )\n}\n","import * as State from './State'\nimport * as Maybe from './utils/Maybe'\nimport * as Record from './Record'\nimport * as CreateRecord from './CreateRecord'\nimport * as Utils from './utils/Utils'\nimport * as Cmd from './utils/Cmd'\nimport * as Time from './utils/Time'\nimport * as Date from './utils/Date'\n\nexport type Update<A, B> =\n    { tag: 'Update', state: A, cmd: Cmd.Cmd<B> }\n\nexport function of<A, B>(state: A, cmd: Cmd.Cmd<B>): Update<A, B> {\n    return { tag: 'Update', state, cmd }\n}\n\nexport function pure<A, B>(state: A): Update<A, B> {\n    return of(state, Cmd.none())\n}\n\nexport function map<A, B, C>(update: Update<A, C>, f: (a: A) => B): Update<B, C> {\n    return of(f(update.state), update.cmd)\n}\n\nexport function andThen<A, B, C>(update: Update<A, C>, f: (a: A) => Update<B, C>): Update<B, C> {\n    const { state, cmd } = update;\n\n    const { state: newState, cmd: cmd0 } = f(state)\n\n    return of(newState, Cmd.batch([ cmd, cmd0 ]))\n}\n","import * as Record from './Record'\r\nimport * as Update from './Update'\r\n\r\n\r\nimport * as Date from './utils/Date'\r\nimport * as Utils from './utils/Utils'\r\nimport * as Array_ from './utils/Array'\r\n\r\n\r\nimport * as Layout from './utils/layout/Layout'\r\n\r\nimport * as Html from './utils/vdom/Html'\r\n\r\nimport * as Icon from './style/Icon'\r\nimport * as Color from './style/Color'\r\n\r\nexport type Records =\r\n    { tag: 'Records', array: Array<Record.Record> }\r\n\r\n\r\nexport function view<A>(\r\n    records: Array<Record.Record>,\r\n    today: Date.Date,\r\n): Layout.Layout<A> {\r\n    return Layout.columnWithSpacing(\r\n        50,\r\n        \"div\",\r\n        [],\r\n        Array_.groupWhile(\r\n            records\r\n                .sort(Record.compare),\r\n            (a, b) =>\r\n                Utils.equals(\r\n                    Date.groupOf({ today, time: a.date }),\r\n                    Date.groupOf({ today, time: b.date })\r\n                )\r\n        )\r\n            .map(group => viewRecordGroup(group, today))\r\n    )\r\n}\r\n\r\nfunction viewRecordGroup<A>(\r\n    group: [Record.Record, ...Array<Record.Record>],\r\n    today: Date.Date\r\n): Layout.Layout<A> {\r\n    return Layout.columnWithSpacing(\r\n        20,\r\n        \"div\",\r\n        [],\r\n        [\r\n            Layout.rowWithSpacing(\r\n                18,\r\n                \"div\",\r\n                [\r\n                    Html.style(\"color\", Color.toCssString(Color.gray400)),\r\n                    Html.style(\"font-size\", \"14px\"),\r\n                    Html.style(\"align-items\", \"baseline\"),\r\n                ],\r\n                [\r\n                    Layout.node(\r\n                        \"div\",\r\n                        [\r\n                            Html.style(\"flex-grow\", \"1\"),\r\n                            Html.style(\"height\", \"1px\"),\r\n                            Html.style(\"margin-left\", \"8px\"),\r\n                            Html.style(\r\n                                \"background-color\",\r\n                                Color.toCssString(Color.gray200)\r\n                            )\r\n                        ],\r\n                        []\r\n                    ),\r\n                    Layout.node(\r\n                        \"div\",\r\n                        [\r\n                            Html.style(\"display\", \"inline-flex\"),\r\n                            Html.style(\"white-space\", \"nowrap\"),\r\n                        ],\r\n                        [\r\n                            Layout.text(\r\n                                Date.groupToSpanishLabel(\r\n                                    Date.groupOf({ today, time: group[0].date })\r\n                                )\r\n                            ),\r\n                        ]\r\n                    ),\r\n                    Layout.node(\r\n                        \"div\",\r\n                        [\r\n                            Html.style(\"flex-grow\", \"1\"),\r\n                            Html.style(\"height\", \"1px\"),\r\n                            Html.style(\r\n                                \"background-color\",\r\n                                Color.toCssString(Color.gray200)\r\n                            )\r\n                        ],\r\n                        []\r\n                    ),\r\n                    Icon.button(\r\n                        [\r\n                            Html.style(\"transform\", `translateY(3px)`),\r\n                        ],\r\n                        Icon.chevronDown(),\r\n                    ),\r\n                ]\r\n            ),\r\n            Layout.columnWithSpacing(\r\n                55,\r\n                \"div\",\r\n                [],\r\n                Array_.groupWhile(\r\n                    group,\r\n                    (a, b) =>\r\n                        Utils.equals(\r\n                            Date.dayTag({ today, time: a.date }),\r\n                            Date.dayTag({ today, time: b.date }))\r\n                )\r\n                    .map(day => viewRecordDay(day, today))\r\n            )\r\n        ]\r\n    )\r\n}\r\n\r\nfunction viewRecordDay<A>(\r\n    day: [Record.Record, ...Array<Record.Record>],\r\n    today: Date.Date,\r\n): Layout.Layout<A> {\r\n    return Layout.columnWithSpacing(\r\n        20,\r\n        \"div\",\r\n        [],\r\n        [\r\n            Layout.column(\r\n                \"div\",\r\n                [\r\n                    Html.style(\"color\", Color.toCssString(Color.accent)),\r\n                    Html.style(\"font-size\", \"12px\"),\r\n                    Html.style(\"letter-spacing\", \"0.15em\"),\r\n                    Html.paddingXY(8, 0),\r\n                ],\r\n                [\r\n                    Layout.text(\r\n                        Date.dayTagToSpanishLabel(\r\n                            Date.dayTag({ today, time: day[0].date })\r\n                        )\r\n                            .toUpperCase()\r\n                    ),\r\n                ]\r\n            ),\r\n            Layout.columnWithSpacing(\r\n                55,\r\n                \"div\",\r\n                [],\r\n                day.map(record => Record.view(record))\r\n            )\r\n        ]\r\n    )\r\n}\r\n\r\n","import * as Html from './Html'\n\nimport * as Utils from '../Utils'\nimport * as Maybe from '../Maybe'\nimport * as Array_ from '../Array'\n\nexport function diff<T>(\n    oldVDom: Html.Html<T>,\n    newVDom: Html.Html<T>,\n    dispatch: (event: T) => void,\n): ($node: Element | Text) => Element | Text {\n\n    if (oldVDom.nodeType === \"text\"\n        || newVDom.nodeType === \"text\"\n        || oldVDom.tagName !== newVDom.tagName\n    ) {\n        return $node => {\n            const $newNode = Html.toElement(newVDom, dispatch)\n            $node.replaceWith($newNode)\n            return $newNode\n        }\n    } else {\n        const patchAttributes = diffAttributes(oldVDom.attributes, newVDom.attributes, dispatch)\n        const patchChildren = diffChildren(oldVDom.children, newVDom.children, dispatch)\n\n        return $node => {\n            patchAttributes($node)\n            patchChildren($node)\n\n            return $node\n        }\n    }\n}\n\n/** A list's indexed map2 but without dropping elements.\n */\nfunction map2Extra<A, B>(\n    xs: Array<A>,\n    ys: Array<A>,\n    bothPresent: (x: A, y: A, index: number) => B,\n    xPresent: (x: A, index: number) => B,\n    yPresent: (y: A, index: number) => B\n): Array<B> {\n    const array: Array<B> = []\n\n    for (let i = 0; i < Math.min(xs.length, ys.length); i++) {\n        array.push(bothPresent(xs[i], ys[i], i))\n    }\n\n    for (let i = ys.length; i < xs.length; i++) {\n        array.push(xPresent(xs[i], i))\n    }\n\n    for (let i = xs.length; i < ys.length; i++) {\n        array.push(yPresent(ys[i], i))\n    }\n\n    return array\n}\n\n// diffAttributes\n\nfunction diffAttributes<T>(\n    oldAttributes: Array<Html.Attribute<T>>,\n    newAttributes: Array<Html.Attribute<T>>,\n    dispatch: (event: T) => void,\n): ($node: Element | Text) => void {\n\n    const patches = map2Extra(\n        oldAttributes,\n        newAttributes,\n        (oldAttr, newAttr, i) => ($node: Element) => {\n            if (!attributeEquality(oldAttr, newAttr)) {\n                removeAttribute(oldAttr, $node)\n                Html.toDomAttribute(newAttr, dispatch, $node)\n            }\n        },\n        (oldAttr, i) => $node => {\n            removeAttribute(oldAttr, $node)\n        },\n        (newAttr, i) => $node => {\n            Html.toDomAttribute(newAttr, dispatch, $node)\n        }\n    )\n\n    return $node => {\n        if ($node instanceof Element)\n            patches.forEach(patch => patch($node))\n    }\n}\n\nfunction attributeEquality<T>(a: Html.Attribute<T>, b: Html.Attribute<T>): boolean {\n    if (a.tag === \"attribute\" && b.tag === \"attribute\") {\n        return a.name === b.name && a.value === b.value\n    } else if (a.tag === \"property\" && b.tag === \"property\") {\n        return a.name === b.name && Utils.equals(a.value, b.value)\n    } else if (a.tag === \"eventHandler\" && b.tag === \"eventHandler\") {\n        // The function comparison will most likely always return false;\n        // a smarter implementation could optimize this case somehow.\n        return a.eventName === b.eventName && a.handler === b.handler\n    } else if (a.tag === \"style\" && b.tag === \"style\") {\n        return a.property === b.property && a.value === b.value\n    } else if (a.tag === \"class\" && b.tag === \"class\") {\n        return a.value === b.value\n    }\n\n    return false\n}\n\nfunction removeAttribute<T>(attr: Html.Attribute<T>, $node: Element): void {\n    if ($node instanceof Text) {\n        // Text nodes don't have attributes AFAIK\n        return\n    }\n\n    switch (attr.tag) {\n        case \"attribute\":\n            $node.removeAttribute(attr.name)\n            return\n        case \"property\":\n            ($node as any)[attr.name] = undefined\n            return\n        case \"eventHandler\":\n            ($node as any)[`on${attr.eventName}`] = undefined\n            return\n        case \"style\":\n            ($node as any).style[attr.property] = \"\"\n            return\n        case \"class\":\n            ($node as any).className = ($node as any).className.replace(attr.value, '')\n    }\n\n}\n\n\n// diffChildren\n\nfunction diffChildren<T>(\n    oldChildren: Array<Html.Html<T>>,\n    newChildren: Array<Html.Html<T>>,\n    dispatch: (event: T) => void,\n): ($parent: Element | Text) => void {\n    return $parent => {\n        if ($parent instanceof Element) {\n            /** We need the $parent to calculate the patches because we need to save childNodes[i]\n             * before removing elements, which could alter the indexing.\n             */\n            const patches = getChildrenPatches(oldChildren, newChildren, dispatch, $parent)\n            patches.forEach(patch => patch())\n        }\n    }\n}\n\nfunction getChildrenPatches<T>(\n    oldChildren: Array<Html.Html<T>>,\n    newChildren: Array<Html.Html<T>>,\n    dispatch: (event: T) => void,\n    $parent: Element,\n): Array<() => void> {\n    return map2Extra(\n        oldChildren,\n        newChildren,\n        (oldChild, newChild, i) => {\n            const $child = $parent.childNodes[i]\n\n            return () => {\n                if ($child instanceof Element || $child instanceof Text)\n                    diff(oldChild, newChild, dispatch)($child)\n                else\n                    throw { $parent, oldChild, newChild, $child }\n            }\n        },\n        (oldChild, i) => {\n            const $child = $parent.childNodes[i]\n\n            return () => {\n                $child.remove()\n            }\n        },\n        (newChild, i) => () => {\n            $parent.appendChild(Html.toElement(newChild, dispatch))\n        }\n    )\n}\n\n","/** About this code\r\n * \r\n * I'm using The Elm Architecture, which is essentially the same idea as React/Redux.\r\n * \r\n */\r\n\r\nimport * as State from './State'\r\nimport * as Update from './Update'\r\nimport * as Record from './Record'\r\nimport * as Records from './Records'\r\nimport * as CreateRecord from './CreateRecord'\r\n\r\nimport * as Html from './utils/vdom/Html'\r\nimport * as VirtualDom from './utils/vdom/VirtualDom'\r\n\r\nimport * as Layout from './utils/layout/Layout'\r\n\r\nimport * as Color from './style/Color'\r\nimport * as  Component from './style/Component'\r\n\r\n\r\n// --- UPDATE\r\n\r\n/** The type of the dispatch function\r\n */\r\n export type Dispatch = (event: Event) => void\r\n\r\n /** Event is what's typically called an \"action\" in Redux\r\n */\r\n export type Event =\r\n     | { event: \"none\" }\r\n\r\n\r\nfunction update(state: State.State, event: Event): Update.Update<State.State, Event> {\r\n    return Update.pure(state)\r\n}\r\n\r\n\r\n// --- VIEW\r\n\r\nconst globalCss: { [selector: string]: string } = {\r\n    \"*\": `\r\n        margin: 0;\r\n        padding: 0;\r\n        text: inherit;\r\n        box-sizing: inherit;\r\n        text-decoration: inherit;\r\n        font-weight: inherit;\r\n        font-size: inherit;\r\n        background: transparent;\r\n        border: 0;\r\n        transition: all 0.2s ease-out;\r\n        color: inherit;\r\n        text-align: inherit;\r\n        outline-color: transparent;\r\n    `,\r\n    \"button, summary\": `cursor: pointer;`,\r\n    \"*:focus\": `outline: 1px dashed rgba(255, 255, 255, 0.15);`,\r\n    \"html\": `box-sizing: border-box; line-height: 1;`,\r\n    \"body\": `\r\n        background-color: ${Color.toCssString(Color.background)};\r\n        font-family: Lato, -apple-system, BlinkMacSystemFont, avenir next, avenir,\r\n            helvetica neue, helvetica, Ubuntu, roboto, noto, segoe ui, arial, sans-serif;\r\n        border-top: 6px solid ${Color.toCssString(Color.accent)};\r\n        color: ${Color.toCssString(Color.gray700)};\r\n    `\r\n}\r\n\r\nexport function view(state: State.State): Html.Html<Event> {\r\n    return Layout.toHtml(\r\n        \"div\",\r\n        [\r\n            Html.style(\"display\", \"flex\"),\r\n            Html.style(\"flex-direction\", \"column\"),\r\n            Html.style(\"align-items\", \"center\"),\r\n        ],\r\n        Layout.withCss(\r\n            globalCss,\r\n            Layout.column(\r\n                \"div\",\r\n                [\r\n                    Html.style(\"max-width\", (1024 + 40) + \"px\"),\r\n                    Html.paddingXY(0, 20),\r\n                ],\r\n                [\r\n                    Layout.space(50),\r\n                    CreateRecord.view(\r\n                        [\r\n                            Html.padding(10),\r\n                        ],\r\n                        {\r\n                            createRecord: state.createRecord,\r\n                            records: state.records,\r\n                        }\r\n                    ),\r\n                    Records.view(state.records, state.today),\r\n                ]\r\n            )\r\n        )\r\n    )\r\n}\r\n\r\n// --- MAIN\r\n\r\n\r\nlet $rootElement = document.getElementById('root') as Element | Text\r\n\r\n/** Flags refer to some external state that is passed to app initialization */\r\nconst flags = localStorage.getItem(\"state\")\r\n\r\nif ($rootElement !== null) {\r\n    let [state, initialCmd] = State.initialState<Event>(flags, { day: 23, month: 4, year: 2021 })\r\n    let currentView = view(state)\r\n\r\n    const dispatch = (event: Event) => {\r\n        const { state: newState, cmd } = update(state, event)\r\n\r\n        const newView = view(newState)\r\n        const patch = VirtualDom.diff(currentView, newView, dispatch)\r\n\r\n        patch($rootElement)\r\n        currentView = newView\r\n        cmd.execute(dispatch)\r\n    }\r\n\r\n    const $initialRender = Html.toElement(currentView, dispatch)\r\n    $rootElement.replaceWith($initialRender)\r\n    $rootElement = $initialRender\r\n\r\n    requestAnimationFrame(() => {\r\n        initialCmd.execute(dispatch)\r\n    })\r\n}\r\n"]}